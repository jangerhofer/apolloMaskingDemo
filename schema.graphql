### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AddNotesConfirmation {
  error: String
  notes: String
}

type AuthPayload {
  token: String!
  user: User!
}

type ChangeOrder {
  attachments(after: String, before: String, first: Int, last: Int, orderBy: FileOrderByInput, skip: Int, where: FileWhereInput): [File!]
  changeOrderItems(after: String, before: String, first: Int, last: Int, orderBy: ChangeOrderItemOrderByInput, skip: Int, where: ChangeOrderItemWhereInput): [ChangeOrderItem!]
  changeOrderNumber: Int!
  createdAt: DateTime!
  createdBy: User!
  discounts: Float
  discountsFloat: Float!
  freight: Float
  freightFloat: Float!
  glCode: GLCode
  id: ID!
  lumpSum: Float
  lumpSumFloat: Float!
  notes: String
  order: Order!
  phaseCode: PhaseCode
  state: ChangeOrderState!
  taxCode: TaxCode
  taxExempt: Boolean!
  updatedAt: DateTime!
}

input ChangeOrderInput {
  discounts: Float
  freight: Float
  glCodeId: ID
  lumpSum: Float
  notes: String
  phaseCodeId: ID
  taxCodeId: ID
}

type ChangeOrderItem {
  changeOrder: ChangeOrder!
  changePriceFloat: Float!
  changeQuantity: Int!
  createdAt: DateTime!
  id: ID!
  lineItem: Item!
  newlyAdded: Boolean!
  previousQuantity: Int!
  updatedAt: DateTime!
}

input ChangeOrderItemInput {
  changeQuantity: Float
  description: String
  manufacturer: String
  manufacturerPartNumber: String
  type: String
  unitDiscount: Float
  unitPrice: Float
}

enum ChangeOrderItemOrderByInput {
  changePriceFloat_ASC
  changePriceFloat_DESC
  changeQuantity_ASC
  changeQuantity_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  newlyAdded_ASC
  newlyAdded_DESC
  previousQuantity_ASC
  previousQuantity_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ChangeOrderItemWhereInput {
  AND: [ChangeOrderItemWhereInput!]
  changeOrder: ChangeOrderWhereInput
  changePriceFloat: Float
  changePriceFloat_gt: Float
  changePriceFloat_gte: Float
  changePriceFloat_in: [Float!]
  changePriceFloat_lt: Float
  changePriceFloat_lte: Float
  changePriceFloat_not: Float
  changePriceFloat_not_in: [Float!]
  changeQuantity: Int
  changeQuantity_gt: Int
  changeQuantity_gte: Int
  changeQuantity_in: [Int!]
  changeQuantity_lt: Int
  changeQuantity_lte: Int
  changeQuantity_not: Int
  changeQuantity_not_in: [Int!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lineItem: ItemWhereInput
  newlyAdded: Boolean
  newlyAdded_not: Boolean
  NOT: [ChangeOrderItemWhereInput!]
  OR: [ChangeOrderItemWhereInput!]
  previousQuantity: Int
  previousQuantity_gt: Int
  previousQuantity_gte: Int
  previousQuantity_in: [Int!]
  previousQuantity_lt: Int
  previousQuantity_lte: Int
  previousQuantity_not: Int
  previousQuantity_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum ChangeOrderOrderByInput {
  changeOrderNumber_ASC
  changeOrderNumber_DESC
  createdAt_ASC
  createdAt_DESC
  discountsFloat_ASC
  discountsFloat_DESC
  freightFloat_ASC
  freightFloat_DESC
  id_ASC
  id_DESC
  lumpSumFloat_ASC
  lumpSumFloat_DESC
  notes_ASC
  notes_DESC
  state_ASC
  state_DESC
  taxExempt_ASC
  taxExempt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum ChangeOrderState {
  APPROVED
  DRAFT
  VOIDED
}

input ChangeOrderWhereInput {
  AND: [ChangeOrderWhereInput!]
  attachments_every: FileWhereInput
  attachments_none: FileWhereInput
  attachments_some: FileWhereInput
  changeOrderItems_every: ChangeOrderItemWhereInput
  changeOrderItems_none: ChangeOrderItemWhereInput
  changeOrderItems_some: ChangeOrderItemWhereInput
  changeOrderNumber: Int
  changeOrderNumber_gt: Int
  changeOrderNumber_gte: Int
  changeOrderNumber_in: [Int!]
  changeOrderNumber_lt: Int
  changeOrderNumber_lte: Int
  changeOrderNumber_not: Int
  changeOrderNumber_not_in: [Int!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  discountsFloat: Float
  discountsFloat_gt: Float
  discountsFloat_gte: Float
  discountsFloat_in: [Float!]
  discountsFloat_lt: Float
  discountsFloat_lte: Float
  discountsFloat_not: Float
  discountsFloat_not_in: [Float!]
  freightFloat: Float
  freightFloat_gt: Float
  freightFloat_gte: Float
  freightFloat_in: [Float!]
  freightFloat_lt: Float
  freightFloat_lte: Float
  freightFloat_not: Float
  freightFloat_not_in: [Float!]
  glCode: GLCodeWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lumpSumFloat: Float
  lumpSumFloat_gt: Float
  lumpSumFloat_gte: Float
  lumpSumFloat_in: [Float!]
  lumpSumFloat_lt: Float
  lumpSumFloat_lte: Float
  lumpSumFloat_not: Float
  lumpSumFloat_not_in: [Float!]
  NOT: [ChangeOrderWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [ChangeOrderWhereInput!]
  order: OrderWhereInput
  phaseCode: PhaseCodeWhereInput
  state: ChangeOrderState
  state_in: [ChangeOrderState!]
  state_not: ChangeOrderState
  state_not_in: [ChangeOrderState!]
  taxCode: TaxCodeWhereInput
  taxExempt: Boolean
  taxExempt_not: Boolean
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Contact {
  createdAt: DateTime!
  createdBy: User!
  id: ID!
  org: Organization!
  updatedAt: DateTime!
  user: ContactUser!
  vendor: Vendor
}

input ContactInput {
  displayName: String
  email: String!
  orgName: String!
  phone: String
  vendorId: ID
}

enum ContactOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ContactUser {
  displayName: String!
  email: String!
  id: String!
  org: ContactUserOrg!
  phone: String
}

type ContactUserOrg {
  id: String!
  name: String!
}

input ContactWhereInput {
  AND: [ContactWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [ContactWhereInput!]
  OR: [ContactWhereInput!]
  org: OrganizationWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  user: UserWhereInput
  vendor: VendorWhereInput
}

type CostCategory {
  code: String!
  createdAt: DateTime!
  description: String!
  id: ID!
  integrationData: Json
  org: Organization!
  phaseCode: PhaseCode
  updatedAt: DateTime!
}

input CostCategoryInput {
  code: String
  description: String
  integrationData: JSON
}

enum CostCategoryOrderByInput {
  code_ASC
  code_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  integrationData_ASC
  integrationData_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CostCategoryWhereInput {
  AND: [CostCategoryWhereInput!]
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [CostCategoryWhereInput!]
  OR: [CostCategoryWhereInput!]
  org: OrganizationWhereInput
  phaseCode: PhaseCodeWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input CreateDeliveryReceiptAttachmentInput {
  """File MIME type"""
  contentType: String!

  """File name w/ extension included."""
  name: String!
  type: DeliveryReceiptAttachmentType!
}

input CreateDeliveryReceiptInput {
  deliveryLocationId: ID
  issues: [DeliveryIssue!]
  jobId: ID!
  notes: String
}

scalar DateTime

type Delivery {
  attachments(after: String, before: String, first: Int, last: Int, orderBy: FileOrderByInput, skip: Int, where: FileWhereInput): [File!]
  contactName: String
  contactPhone: String
  createdAt: DateTime!
  createdBy: User!
  deliveryInstructions: String
  deliveryItems(after: String, before: String, first: Int, last: Int, orderBy: DeliveryItemOrderByInput, skip: Int, where: DeliveryItemWhereInput): [DeliveryItem!]
  deliveryNumber: Int!
  deliveryWindow: DeliveryWindow!
  id: ID!
  needByDate: DateTime
  needByTime: DateTime
  needByWindow: String!
  order: Order!
  sendToLocation: Location!
  state: DeliveryState!
  updatedAt: DateTime!
}

enum DeliveryIssue {
  BACKORDERED
  DAMAGED
  MISSING
  NO_ISSUES
  PARTIAL
  WRONG_ITEM
}

type DeliveryItem {
  createdAt: DateTime!
  delivery: Delivery!
  id: ID!
  lineItem: Item
  needByDate: DateTime
  quantity: Int!
  updatedAt: DateTime!
}

enum DeliveryItemOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  needByDate_ASC
  needByDate_DESC
  quantity_ASC
  quantity_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input DeliveryItemWhereInput {
  AND: [DeliveryItemWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  delivery: DeliveryWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lineItem: ItemWhereInput
  needByDate: DateTime
  needByDate_gt: DateTime
  needByDate_gte: DateTime
  needByDate_in: [DateTime!]
  needByDate_lt: DateTime
  needByDate_lte: DateTime
  needByDate_not: DateTime
  needByDate_not_in: [DateTime!]
  NOT: [DeliveryItemWhereInput!]
  OR: [DeliveryItemWhereInput!]
  quantity: Int
  quantity_gt: Int
  quantity_gte: Int
  quantity_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_not: Int
  quantity_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum DeliveryOrderByInput {
  contactName_ASC
  contactName_DESC
  contactPhone_ASC
  contactPhone_DESC
  createdAt_ASC
  createdAt_DESC
  deliveryInstructions_ASC
  deliveryInstructions_DESC
  deliveryNumber_ASC
  deliveryNumber_DESC
  deliveryWindow_ASC
  deliveryWindow_DESC
  id_ASC
  id_DESC
  needByDate_ASC
  needByDate_DESC
  needByTime_ASC
  needByTime_DESC
  needByWindow_ASC
  needByWindow_DESC
  state_ASC
  state_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DeliveryReceipt {
  attachments(after: String, before: String, first: Int, last: Int, orderBy: DeliveryReceiptAttachmentOrderByInput, skip: Int, where: DeliveryReceiptAttachmentWhereInput): [DeliveryReceiptAttachment!]
  createdAt: DateTime!
  createdBy: User!
  deleted: Boolean!
  deliveryLocation: Location
  history(after: String, before: String, first: Int, last: Int, orderBy: DeliveryReceiptEventOrderByInput, skip: Int, where: DeliveryReceiptEventWhereInput): [DeliveryReceiptEvent!]
  id: ID!
  identifier: String
  issues: [DeliveryIssue!]!
  job: Job
  notes: String
  org: Organization!
  purchaseOrder: Order
  state: DeliveryReceiptState!
  updatedAt: DateTime!
}

type DeliveryReceiptAttachment {
  createdAt: DateTime!
  createdBy: User!
  deleted: Boolean!
  deliveryReceipt: DeliveryReceipt!
  file: File!
  id: ID!
  identifier: String
  org: Organization!
  type: DeliveryReceiptAttachmentType!
  updatedAt: DateTime!
}

enum DeliveryReceiptAttachmentOrderByInput {
  createdAt_ASC
  createdAt_DESC
  deleted_ASC
  deleted_DESC
  id_ASC
  id_DESC
  identifier_ASC
  identifier_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum DeliveryReceiptAttachmentType {
  MATERIAL_IMAGE
  PACKING_SLIP_IMAGE
}

input DeliveryReceiptAttachmentWhereInput {
  AND: [DeliveryReceiptAttachmentWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  deleted: Boolean
  deleted_not: Boolean
  deliveryReceipt: DeliveryReceiptWhereInput
  file: FileWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  identifier: String
  identifier_contains: String
  identifier_ends_with: String
  identifier_gt: String
  identifier_gte: String
  identifier_in: [String!]
  identifier_lt: String
  identifier_lte: String
  identifier_not: String
  identifier_not_contains: String
  identifier_not_ends_with: String
  identifier_not_in: [String!]
  identifier_not_starts_with: String
  identifier_starts_with: String
  NOT: [DeliveryReceiptAttachmentWhereInput!]
  OR: [DeliveryReceiptAttachmentWhereInput!]
  org: OrganizationWhereInput
  type: DeliveryReceiptAttachmentType
  type_in: [DeliveryReceiptAttachmentType!]
  type_not: DeliveryReceiptAttachmentType
  type_not_in: [DeliveryReceiptAttachmentType!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type DeliveryReceiptEvent {
  createdAt: DateTime!
  createdBy: User
  id: ID!
  metadata: Json
  type: DeliveryReceiptEventType!
  updatedAt: DateTime!
}

enum DeliveryReceiptEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  metadata_ASC
  metadata_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum DeliveryReceiptEventType {
  CREATION
  DELETION
  LINK_TO_ORDER
  SUBMISSION
}

input DeliveryReceiptEventWhereInput {
  AND: [DeliveryReceiptEventWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [DeliveryReceiptEventWhereInput!]
  OR: [DeliveryReceiptEventWhereInput!]
  type: DeliveryReceiptEventType
  type_in: [DeliveryReceiptEventType!]
  type_not: DeliveryReceiptEventType
  type_not_in: [DeliveryReceiptEventType!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum DeliveryReceiptOrderByInput {
  createdAt_ASC
  createdAt_DESC
}

enum DeliveryReceiptState {
  DRAFT
  SUBMITTED
}

input DeliveryReceiptWhereInput {
  AND: [DeliveryReceiptWhereInput!]
  attachments_every: DeliveryReceiptAttachmentWhereInput
  attachments_none: DeliveryReceiptAttachmentWhereInput
  attachments_some: DeliveryReceiptAttachmentWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  deleted: Boolean
  deleted_not: Boolean
  deliveryLocation: LocationWhereInput
  history_every: DeliveryReceiptEventWhereInput
  history_none: DeliveryReceiptEventWhereInput
  history_some: DeliveryReceiptEventWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  identifier: String
  identifier_contains: String
  identifier_ends_with: String
  identifier_gt: String
  identifier_gte: String
  identifier_in: [String!]
  identifier_lt: String
  identifier_lte: String
  identifier_not: String
  identifier_not_contains: String
  identifier_not_ends_with: String
  identifier_not_in: [String!]
  identifier_not_starts_with: String
  identifier_starts_with: String
  job: JobWhereInput
  NOT: [DeliveryReceiptWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [DeliveryReceiptWhereInput!]
  org: OrganizationWhereInput
  purchaseOrder: OrderWhereInput
  state: DeliveryReceiptState
  state_in: [DeliveryReceiptState!]
  state_not: DeliveryReceiptState
  state_not_in: [DeliveryReceiptState!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum DeliveryState {
  ACKNOWLEDGED
  DELIVERED
  REJECTED
  REQUESTED
}

input DeliveryWhereInput {
  AND: [DeliveryWhereInput!]
  attachments_every: FileWhereInput
  attachments_none: FileWhereInput
  attachments_some: FileWhereInput
  contactName: String
  contactName_contains: String
  contactName_ends_with: String
  contactName_gt: String
  contactName_gte: String
  contactName_in: [String!]
  contactName_lt: String
  contactName_lte: String
  contactName_not: String
  contactName_not_contains: String
  contactName_not_ends_with: String
  contactName_not_in: [String!]
  contactName_not_starts_with: String
  contactName_starts_with: String
  contactPhone: String
  contactPhone_contains: String
  contactPhone_ends_with: String
  contactPhone_gt: String
  contactPhone_gte: String
  contactPhone_in: [String!]
  contactPhone_lt: String
  contactPhone_lte: String
  contactPhone_not: String
  contactPhone_not_contains: String
  contactPhone_not_ends_with: String
  contactPhone_not_in: [String!]
  contactPhone_not_starts_with: String
  contactPhone_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  deliveryInstructions: String
  deliveryInstructions_contains: String
  deliveryInstructions_ends_with: String
  deliveryInstructions_gt: String
  deliveryInstructions_gte: String
  deliveryInstructions_in: [String!]
  deliveryInstructions_lt: String
  deliveryInstructions_lte: String
  deliveryInstructions_not: String
  deliveryInstructions_not_contains: String
  deliveryInstructions_not_ends_with: String
  deliveryInstructions_not_in: [String!]
  deliveryInstructions_not_starts_with: String
  deliveryInstructions_starts_with: String
  deliveryItems_every: DeliveryItemWhereInput
  deliveryItems_none: DeliveryItemWhereInput
  deliveryItems_some: DeliveryItemWhereInput
  deliveryNumber: Int
  deliveryNumber_gt: Int
  deliveryNumber_gte: Int
  deliveryNumber_in: [Int!]
  deliveryNumber_lt: Int
  deliveryNumber_lte: Int
  deliveryNumber_not: Int
  deliveryNumber_not_in: [Int!]
  deliveryWindow: DeliveryWindow
  deliveryWindow_in: [DeliveryWindow!]
  deliveryWindow_not: DeliveryWindow
  deliveryWindow_not_in: [DeliveryWindow!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  needByDate: DateTime
  needByDate_gt: DateTime
  needByDate_gte: DateTime
  needByDate_in: [DateTime!]
  needByDate_lt: DateTime
  needByDate_lte: DateTime
  needByDate_not: DateTime
  needByDate_not_in: [DateTime!]
  needByTime: DateTime
  needByTime_gt: DateTime
  needByTime_gte: DateTime
  needByTime_in: [DateTime!]
  needByTime_lt: DateTime
  needByTime_lte: DateTime
  needByTime_not: DateTime
  needByTime_not_in: [DateTime!]
  needByWindow: String
  needByWindow_contains: String
  needByWindow_ends_with: String
  needByWindow_gt: String
  needByWindow_gte: String
  needByWindow_in: [String!]
  needByWindow_lt: String
  needByWindow_lte: String
  needByWindow_not: String
  needByWindow_not_contains: String
  needByWindow_not_ends_with: String
  needByWindow_not_in: [String!]
  needByWindow_not_starts_with: String
  needByWindow_starts_with: String
  NOT: [DeliveryWhereInput!]
  OR: [DeliveryWhereInput!]
  order: OrderWhereInput
  sendToLocation: LocationWhereInput
  state: DeliveryState
  state_in: [DeliveryState!]
  state_not: DeliveryState
  state_not_in: [DeliveryState!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum DeliveryWindow {
  CUSTOM
  FIRST_RUN
  NOT_APPLICABLE
  SECOND_RUN
}

type ExpoPushToken {
  createdAt: DateTime!
  id: ID!
  token: String!
  updatedAt: DateTime!
  user: User!
}

enum ExpoPushTokenOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  token_ASC
  token_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ExpoPushTokenWhereInput {
  AND: [ExpoPushTokenWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [ExpoPushTokenWhereInput!]
  OR: [ExpoPushTokenWhereInput!]
  token: String
  token_contains: String
  token_ends_with: String
  token_gt: String
  token_gte: String
  token_in: [String!]
  token_lt: String
  token_lte: String
  token_not: String
  token_not_contains: String
  token_not_ends_with: String
  token_not_in: [String!]
  token_not_starts_with: String
  token_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  user: UserWhereInput
}

type File {
  createdAt: DateTime!
  createdBy: User!
  id: ID!
  name: String
  org: Organization
  s3key: String

  """
  Pre-signed URL for upload of a file to S3; returned as the result of a mutation which creates a new file.
  """
  signedPutURL: String
  updatedAt: DateTime!
  url: String
}

input FileInput {
  data: Upload!
}

enum FileOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  s3key_ASC
  s3key_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input FileWhereInput {
  AND: [FileWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [FileWhereInput!]
  OR: [FileWhereInput!]
  org: OrganizationWhereInput
  s3key: String
  s3key_contains: String
  s3key_ends_with: String
  s3key_gt: String
  s3key_gte: String
  s3key_in: [String!]
  s3key_lt: String
  s3key_lte: String
  s3key_not: String
  s3key_not_contains: String
  s3key_not_ends_with: String
  s3key_not_in: [String!]
  s3key_not_starts_with: String
  s3key_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

type GLCode {
  code: String!
  createdAt: DateTime!
  description: String!
  id: ID!
  integrationData: Json
  org: Organization!
  updatedAt: DateTime!
}

input GLCodeInput {
  code: String
  description: String
}

input GLCodeWhereInput {
  AND: [GLCodeWhereInput!]
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [GLCodeWhereInput!]
  OR: [GLCodeWhereInput!]
  org: OrganizationWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Item {
  backorderLeadTime: String
  backorderQuantity: Int
  createdAt: DateTime!
  description: String
  extPrice: Float
  id: ID!
  integrationData: JSON!
  lineNumber: Int!
  manufacturer: String
  manufacturerPartNumber: String
  needByDate: DateTime
  notes: String
  order: Order
  quantity: Int
  quantityReleased: Int!
  taxCode: String
  taxRate: Float
  type: String
  unitDiscount: Float
  unitPrice: Float
  unitPriceFloat: Float
  unitsOfMeasure: String
  universalProductCode: String
  updatedAt: DateTime!
}

input ItemInput {
  backorderLeadTime: DateTime
  backorderQuantity: Int
  description: String
  id: ID
  integrationData: JSON
  lineNumber: Int
  manufacturer: String
  manufacturerPartNumber: String
  needByDate: DateTime
  notes: String
  quantity: Int
  taxCode: String
  unitDiscount: Float
  unitPrice: Float
  unitsOfMeasure: String
  universalProductCode: String
}

input ItemWhereInput {
  AND: [ItemWhereInput!]
  backorderLeadTime: DateTime
  backorderLeadTime_gt: DateTime
  backorderLeadTime_gte: DateTime
  backorderLeadTime_in: [DateTime!]
  backorderLeadTime_lt: DateTime
  backorderLeadTime_lte: DateTime
  backorderLeadTime_not: DateTime
  backorderLeadTime_not_in: [DateTime!]
  backorderQuantity: Int
  backorderQuantity_gt: Int
  backorderQuantity_gte: Int
  backorderQuantity_in: [Int!]
  backorderQuantity_lt: Int
  backorderQuantity_lte: Int
  backorderQuantity_not: Int
  backorderQuantity_not_in: [Int!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lineNumber: Int
  lineNumber_gt: Int
  lineNumber_gte: Int
  lineNumber_in: [Int!]
  lineNumber_lt: Int
  lineNumber_lte: Int
  lineNumber_not: Int
  lineNumber_not_in: [Int!]
  manufacturer: String
  manufacturer_contains: String
  manufacturer_ends_with: String
  manufacturer_gt: String
  manufacturer_gte: String
  manufacturer_in: [String!]
  manufacturer_lt: String
  manufacturer_lte: String
  manufacturer_not: String
  manufacturer_not_contains: String
  manufacturer_not_ends_with: String
  manufacturer_not_in: [String!]
  manufacturer_not_starts_with: String
  manufacturer_starts_with: String
  manufacturerPartNumber: String
  manufacturerPartNumber_contains: String
  manufacturerPartNumber_ends_with: String
  manufacturerPartNumber_gt: String
  manufacturerPartNumber_gte: String
  manufacturerPartNumber_in: [String!]
  manufacturerPartNumber_lt: String
  manufacturerPartNumber_lte: String
  manufacturerPartNumber_not: String
  manufacturerPartNumber_not_contains: String
  manufacturerPartNumber_not_ends_with: String
  manufacturerPartNumber_not_in: [String!]
  manufacturerPartNumber_not_starts_with: String
  manufacturerPartNumber_starts_with: String
  needByDate: DateTime
  needByDate_gt: DateTime
  needByDate_gte: DateTime
  needByDate_in: [DateTime!]
  needByDate_lt: DateTime
  needByDate_lte: DateTime
  needByDate_not: DateTime
  needByDate_not_in: [DateTime!]
  NOT: [ItemWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [ItemWhereInput!]
  order: OrderWhereInput
  quantity: Int
  quantity_gt: Int
  quantity_gte: Int
  quantity_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_not: Int
  quantity_not_in: [Int!]
  quantityReleased: Int
  quantityReleased_gt: Int
  quantityReleased_gte: Int
  quantityReleased_in: [Int!]
  quantityReleased_lt: Int
  quantityReleased_lte: Int
  quantityReleased_not: Int
  quantityReleased_not_in: [Int!]
  taxCode: String
  taxCode_contains: String
  taxCode_ends_with: String
  taxCode_gt: String
  taxCode_gte: String
  taxCode_in: [String!]
  taxCode_lt: String
  taxCode_lte: String
  taxCode_not: String
  taxCode_not_contains: String
  taxCode_not_ends_with: String
  taxCode_not_in: [String!]
  taxCode_not_starts_with: String
  taxCode_starts_with: String
  taxRate: Float
  taxRate_gt: Float
  taxRate_gte: Float
  taxRate_in: [Float!]
  taxRate_lt: Float
  taxRate_lte: Float
  taxRate_not: Float
  taxRate_not_in: [Float!]
  type: String
  type_contains: String
  type_ends_with: String
  type_gt: String
  type_gte: String
  type_in: [String!]
  type_lt: String
  type_lte: String
  type_not: String
  type_not_contains: String
  type_not_ends_with: String
  type_not_in: [String!]
  type_not_starts_with: String
  type_starts_with: String
  unitDiscount: Float
  unitDiscount_gt: Float
  unitDiscount_gte: Float
  unitDiscount_in: [Float!]
  unitDiscount_lt: Float
  unitDiscount_lte: Float
  unitDiscount_not: Float
  unitDiscount_not_in: [Float!]
  unitPriceFloat: Float
  unitPriceFloat_gt: Float
  unitPriceFloat_gte: Float
  unitPriceFloat_in: [Float!]
  unitPriceFloat_lt: Float
  unitPriceFloat_lte: Float
  unitPriceFloat_not: Float
  unitPriceFloat_not_in: [Float!]
  unitsOfMeasure: String
  unitsOfMeasure_contains: String
  unitsOfMeasure_ends_with: String
  unitsOfMeasure_gt: String
  unitsOfMeasure_gte: String
  unitsOfMeasure_in: [String!]
  unitsOfMeasure_lt: String
  unitsOfMeasure_lte: String
  unitsOfMeasure_not: String
  unitsOfMeasure_not_contains: String
  unitsOfMeasure_not_ends_with: String
  unitsOfMeasure_not_in: [String!]
  unitsOfMeasure_not_starts_with: String
  unitsOfMeasure_starts_with: String
  universalProductCode: String
  universalProductCode_contains: String
  universalProductCode_ends_with: String
  universalProductCode_gt: String
  universalProductCode_gte: String
  universalProductCode_in: [String!]
  universalProductCode_lt: String
  universalProductCode_lte: String
  universalProductCode_not: String
  universalProductCode_not_contains: String
  universalProductCode_not_ends_with: String
  universalProductCode_not_in: [String!]
  universalProductCode_not_starts_with: String
  universalProductCode_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Job {
  createdAt: DateTime!
  defaultLocation: Location
  defaultTaxCode: TaxCode
  defaultUser: User
  deliveryReceipts(
    createdByIds: [ID!]

    """Filter for receipts that have been marked as deleted."""
    deleted: Boolean = false
    orderBy: DeliveryReceiptOrderByInput = createdAt_DESC

    """Filter deliveries by associated purchase order."""
    purchaseOrderId: ID
    state_in: [DeliveryReceiptState!]
  ): [DeliveryReceipt!]!
  id: ID!
  integrationData: Json
  jobCode: String

  """User has joined the job"""
  joined: Boolean!
  locations(after: String, before: String, first: Int, last: Int, orderBy: LocationOrderByInput, skip: Int, where: LocationWhereInput): [Location!]
  name: String!
  numOrders: Int!
  orders(after: String, before: String, first: Int, last: Int, orderBy: OrderOrderByInput, skip: Int, where: OrderWhereInput): [Order!]
  org: Organization!
  phaseCodes(after: String, before: String, first: Int, last: Int, orderBy: PhaseCodeOrderByInput, skip: Int, where: PhaseCodeWhereInput): [PhaseCode!]
  quickbooksOnlineJobMapping: quickbooksOnlineJobMapping
  sage100ContractorJobMapping: Sage100ContractorJobMapping
  sage300CREJobMapping: Sage300CREJobMapping
  startDate: DateTime
  state: JobState!
  updatedAt: DateTime!

  """Fetch user's draft requisition for job if extant."""
  userDraftRequisition: Requisition
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]
}

input JobCreateInput {
  customerId: String
  customerName: String
  jobCode: String
  name: String!
  startDate: DateTime
}

"""Filter by user's job membership status"""
enum JobMembershipFilter {
  ALL_JOBS
  JOINED
  NOT_JOINED
}

enum JobOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  integrationData_ASC
  integrationData_DESC
  jobCode_ASC
  jobCode_DESC
  name_ASC
  name_DESC
  startDate_ASC
  startDate_DESC
  state_ASC
  state_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type JobReport {
  createdAt: DateTime!
  id: ID!
  jobReportUniqueKey: String!
  notes: String
  org: Organization!
  startDate: DateTime!
  updatedAt: DateTime!
  url: String!
}

enum JobState {
  CLOSED
  OPEN
}

input JobUpdateInput {
  customerId: String
  customerName: String
  jobCode: String
  name: String
  startDate: DateTime
  state: JobState
}

input JobWhereInput {
  AND: [JobWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  defaultLocation: LocationWhereInput
  defaultTaxCode: TaxCodeWhereInput
  defaultUser: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  jobCode: String
  jobCode_contains: String
  jobCode_ends_with: String
  jobCode_gt: String
  jobCode_gte: String
  jobCode_in: [String!]
  jobCode_lt: String
  jobCode_lte: String
  jobCode_not: String
  jobCode_not_contains: String
  jobCode_not_ends_with: String
  jobCode_not_in: [String!]
  jobCode_not_starts_with: String
  jobCode_starts_with: String
  locations_every: LocationWhereInput
  locations_none: LocationWhereInput
  locations_some: LocationWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [JobWhereInput!]
  OR: [JobWhereInput!]
  orders_every: OrderWhereInput
  orders_none: OrderWhereInput
  orders_some: OrderWhereInput
  org: OrganizationWhereInput
  phaseCodes_every: PhaseCodeWhereInput
  phaseCodes_none: PhaseCodeWhereInput
  phaseCodes_some: PhaseCodeWhereInput
  quickbooksOnlineJobMapping: quickbooksOnlineJobMappingWhereInput
  sage100ContractorJobMapping: Sage100ContractorJobMappingWhereInput
  sage300CREJobMapping: Sage300CREJobMappingWhereInput
  startDate: DateTime
  startDate_gt: DateTime
  startDate_gte: DateTime
  startDate_in: [DateTime!]
  startDate_lt: DateTime
  startDate_lte: DateTime
  startDate_not: DateTime
  startDate_not_in: [DateTime!]
  state: JobState
  state_in: [JobState!]
  state_not: JobState
  state_not_in: [JobState!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  users_every: UserWhereInput
  users_none: UserWhereInput
  users_some: UserWhereInput
}

scalar Json

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Location {
  addressLine1: String
  addressLine2: String
  city: String
  defaultJobs(after: String, before: String, first: Int, last: Int, orderBy: JobOrderByInput, skip: Int, where: JobWhereInput): [Job!]
  directions: String
  id: ID!
  jobs(after: String, before: String, first: Int, last: Int, orderBy: JobOrderByInput, skip: Int, where: JobWhereInput): [Job!]
  latitude: Float
  longitude: Float
  name: String!
  org: Organization
  phone: String
  state: String
  vendors(after: String, before: String, first: Int, last: Int, orderBy: VendorOrderByInput, skip: Int, where: VendorWhereInput): [Vendor!]
  zipcode: String
}

input LocationInput {
  addressLine1: String
  addressLine2: String
  city: String
  directions: String
  latitude: Float
  longitude: Float
  name: String
  phone: String
  state: String
  zipcode: String
}

enum LocationOrderByInput {
  addressLine1_ASC
  addressLine1_DESC
  addressLine2_ASC
  addressLine2_DESC
  city_ASC
  city_DESC
  createdAt_ASC
  createdAt_DESC
  directions_ASC
  directions_DESC
  id_ASC
  id_DESC
  latitude_ASC
  latitude_DESC
  longitude_ASC
  longitude_DESC
  name_ASC
  name_DESC
  phone_ASC
  phone_DESC
  state_ASC
  state_DESC
  updatedAt_ASC
  updatedAt_DESC
  zipcode_ASC
  zipcode_DESC
}

input LocationWhereInput {
  addressLine1: String
  addressLine1_contains: String
  addressLine1_ends_with: String
  addressLine1_gt: String
  addressLine1_gte: String
  addressLine1_in: [String!]
  addressLine1_lt: String
  addressLine1_lte: String
  addressLine1_not: String
  addressLine1_not_contains: String
  addressLine1_not_ends_with: String
  addressLine1_not_in: [String!]
  addressLine1_not_starts_with: String
  addressLine1_starts_with: String
  addressLine2: String
  addressLine2_contains: String
  addressLine2_ends_with: String
  addressLine2_gt: String
  addressLine2_gte: String
  addressLine2_in: [String!]
  addressLine2_lt: String
  addressLine2_lte: String
  addressLine2_not: String
  addressLine2_not_contains: String
  addressLine2_not_ends_with: String
  addressLine2_not_in: [String!]
  addressLine2_not_starts_with: String
  addressLine2_starts_with: String
  AND: [LocationWhereInput!]
  city: String
  city_contains: String
  city_ends_with: String
  city_gt: String
  city_gte: String
  city_in: [String!]
  city_lt: String
  city_lte: String
  city_not: String
  city_not_contains: String
  city_not_ends_with: String
  city_not_in: [String!]
  city_not_starts_with: String
  city_starts_with: String
  defaultJobs_every: JobWhereInput
  defaultJobs_none: JobWhereInput
  defaultJobs_some: JobWhereInput
  directions: String
  directions_contains: String
  directions_ends_with: String
  directions_gt: String
  directions_gte: String
  directions_in: [String!]
  directions_lt: String
  directions_lte: String
  directions_not: String
  directions_not_contains: String
  directions_not_ends_with: String
  directions_not_in: [String!]
  directions_not_starts_with: String
  directions_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  jobs_every: JobWhereInput
  jobs_none: JobWhereInput
  jobs_some: JobWhereInput
  latitude: Float
  latitude_gt: Float
  latitude_gte: Float
  latitude_in: [Float!]
  latitude_lt: Float
  latitude_lte: Float
  latitude_not: Float
  latitude_not_in: [Float!]
  longitude: Float
  longitude_gt: Float
  longitude_gte: Float
  longitude_in: [Float!]
  longitude_lt: Float
  longitude_lte: Float
  longitude_not: Float
  longitude_not_in: [Float!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [LocationWhereInput!]
  OR: [LocationWhereInput!]
  org: OrganizationWhereInput
  phone: String
  phone_contains: String
  phone_ends_with: String
  phone_gt: String
  phone_gte: String
  phone_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_not: String
  phone_not_contains: String
  phone_not_ends_with: String
  phone_not_in: [String!]
  phone_not_starts_with: String
  phone_starts_with: String
  state: String
  state_contains: String
  state_ends_with: String
  state_gt: String
  state_gte: String
  state_in: [String!]
  state_lt: String
  state_lte: String
  state_not: String
  state_not_contains: String
  state_not_ends_with: String
  state_not_in: [String!]
  state_not_starts_with: String
  state_starts_with: String
  vendors_every: VendorWhereInput
  vendors_none: VendorWhereInput
  vendors_some: VendorWhereInput
  zipcode: String
  zipcode_contains: String
  zipcode_ends_with: String
  zipcode_gt: String
  zipcode_gte: String
  zipcode_in: [String!]
  zipcode_lt: String
  zipcode_lte: String
  zipcode_not: String
  zipcode_not_contains: String
  zipcode_not_ends_with: String
  zipcode_not_in: [String!]
  zipcode_not_starts_with: String
  zipcode_starts_with: String
}

input MultipleUserSettingsInput {
  updates: [UserSettingsInput!]
}

type Mutation {
  acknowledgeRequisitionItems(requisitionId: ID!, requisitionItemIds: [ID!]!): Requisition!
  addCommentToOrder(comment: OrderCommentInput!, orderId: ID!): Order!
  addExistingLocationToJob(id: ID, locationId: ID, setDefault: Boolean): Job!
  addExistingUserToJob(id: ID!, setDefault: Boolean, userId: ID!): Job!
  addExpoPushTokenToUser(token: String!): User!
  addItemsToOrder(itemInputs: [ItemInput!]!, orderId: ID!): Order!
  addItemsToRequisition(requisitionId: ID!, requisitionItemInputs: [RequisitionItemInput!]!): Requisition!
  addItemToChangeOrder(changeOrderId: ID!): ChangeOrder!
  addNewLocationToJob(id: ID!, input: LocationInput!, setDefault: Boolean): Job!
  addNewUserToJob(id: ID!, newUserInput: UserInput!, setDefault: Boolean): Job!
  addNotesToJobReport(notes: String!, startDate: DateTime!): AddNotesConfirmation!
  addQuoteToOrder(contactId: ID!, orderId: ID!): Order!
  addUserToJob(
    """ID of the job to join."""
    id: ID!
  ): User!
  attachFileToChangeOrder(changeOrderId: ID!, fileInput: FileInput!): ChangeOrder!
  attachFileToOrder(fileInput: FileInput!, orderId: ID!): Order!
  beginLotPO(orderId: ID!): Order!

  """
  This resolver is used when an order has been sent to a seller but is subsequently cancelled by the buyer
  """
  cancelOrder(orderId: ID!): Order!
  cancelRelease(releaseId: ID!): Release!
  changePassword(newPassword: String!, password: String!): User!
  createChangeOrder(orderId: ID!): ChangeOrder!
  createContact(input: ContactInput!): Contact
  createDeliveryReceipt(input: CreateDeliveryReceiptInput!): DeliveryReceipt!
  createDeliveryReceiptAttachment(attachment: CreateDeliveryReceiptAttachmentInput!, deliveryId: ID!): DeliveryReceiptAttachment!
  createJob(input: JobCreateInput!): Job!
  createLocation(input: LocationInput!, jobId: ID): Location
  createLotPO: Order!
  createOrder(itemInputs: [ItemInput!], orderInput: OrderInput): Order!
  createOrderExportConfig(orderExportConfigInput: OrderExportConfigInput!): Organization!
  createOrderFromRequisition(orderInput: OrderInput, requisitionId: ID!, requisitionItemIds: [ID!]!): Order!
  createOrderFromRFQ(
    jobCode: String!

    """RFQ Order ID"""
    orderId: ID!
    purchaseOrderNumber: String!

    """The Quote ID of the winning Bid"""
    quoteId: ID!
  ): Order!
  createRelease(orderId: ID!, releaseInput: ReleaseInput!): Release!
  createRequisition(requisitionInput: RequisitionInput, requisitionItemInputs: [RequisitionItemInput!]): Requisition!
  createRequisitionTemplate(description: String, items: [RequisitionTemplateItemInput!], name: String): RequisitionTemplate!
  deleteDeliveryReceipt(id: ID!): DeliveryReceipt!

  """
  Mark delivery receipt images as ignored, illegible, or otherwise not useful.
  """
  deleteDeliveryReceiptAttachment(id: ID!): DeliveryReceipt!
  deleteOrderExportConfig(orderExportConfigId: ID!): OrderExportConfig!
  deleteQuote(quoteId: ID!): Quote!

  """
  Returns true upon successful delete; false if template could not be found.
  """
  deleteRequisitionTemplate(id: ID!): Boolean!
  deleteVendorPrices(upcs: [String!]!, vendorId: ID!): [String!]!
  discardChangeOrder(changeOrderId: ID!): ChangeOrder!

  """
  This resolver is used when an order has been created but is removed by the buyer while still in a draft state
  """
  discardOrder(orderId: ID!): Order!
  discardRequisition(requisitionId: ID!): Requisition!
  exportOrders(aliases: JSON, exportColumns: [String!] = ["PO_NUMBER", "PO_VENDOR_NUMBER", "PO_SHIP_TO", "PO_CREATED_AT", "PO_NEED_BY_DATE", "PO_BUYER", "PO_JOB", "PO_PHASE_CODE", "PO_COST_CATEGORY", "PO_NOTES", "ITEM_LINE_NUMBER", "ITEM_DESCRIPTION", "ITEM_PART_NUMBER", "ITEM_UPC", "ITEM_QUANTITY", "ITEM_UNIT_PRICE", "ITEM_TAXABLE", "ITEM_PHASE_CODE", "ITEM_COST_CATEGORY"], includeHeaders: Boolean! = true, orderIds: [String!]!): String!
  flagOrder(flagInput: OrderFlagInput!, orderId: ID!): Order!
  forgotUserPassword(email: String!): String!
  forwardOrder(input: OrderForwardInput!, orderId: ID!): Order!
  importJobs(fileInput: FileInput!): String!
  importPhaseAndCostCategories(fileInput: FileInput!): String!
  importVendors(fileInput: FileInput!): String!
  inviteUserToOrganization(admin: Boolean!, defaultTimezone: String, email: String!, name: String, password: String!, phone: String, role: String!): AuthPayload!
  linkDeliveryReceiptToPO(id: ID!, orderId: ID!): DeliveryReceipt!
  linkOrderToERP(orderId: ID!): Order!
  login(email: String!, password: String!): AuthPayload!
  markOrderAcknowledged(orderId: ID!): Order!
  markOrderComplete(orderId: ID!): Order!

  """
  This resolver is used when an order has been sent to a seller but is subsequently cancelled by the (potential) seller
  """
  rejectOrder(orderId: ID!): Order!
  removeFileFromOrder(fileId: ID!, orderId: ID!): Order!
  removeItemsFromOrder(itemIds: [ID!]!, orderId: ID!): Order!
  removeLocationFromJob(id: ID, locationId: ID): Job!

  """
  Removes user from a job if the user is previously active on the job.  Note: fails silently.
  """
  removeUserFromJob(
    """ID of the job to leave."""
    id: ID!
  ): User!
  removeUserFromOrg(id: ID!): User!
  removeUsersFromJob(id: ID!, userIds: [ID!]!): Job!
  reopenOrder(orderId: ID!): Order!
  resendInvite(email: String!): User!
  resendRFQ(contactIds: [ID!]!, orderId: ID!): Boolean!

  """Reset password via email reset flow"""
  resetPassword(
    """Reset secret code"""
    code: String!
    email: String!

    """New password to be set"""
    password: String!
  ): AuthPayload!
  resetPasswordByAdmin(email: String!): User!
  saveOrderFromAcknowledgement(orderId: ID!): Order!
  sendPurchaseOrder(orderId: ID!): Order!
  sendRequisition(requisitionId: ID!): Requisition!
  sendRFQ(orderId: ID!): Order!
  setDefaultLocationForJob(jobId: ID!, locationId: ID!): Job!
  setDefaultOrderExportConfig(orderExportConfigId: ID!): Organization!
  setDefaultUserForJob(jobId: ID!, userId: ID!): Job!
  signup(defaultTimezone: String, email: String!, name: String, password: String!): AuthPayload!
  submitChangeOrder(changeOrderId: ID!): ChangeOrder!
  submitDeliveryReceipt(id: ID!): DeliveryReceipt!
  unlinkVendorContact(contactId: ID!): Contact!
  updateChangeOrderDetails(changeOrderId: ID!, changeOrderInput: ChangeOrderInput!): ChangeOrder!
  updateDeliveryReceipt(id: ID!, receipt: UpdateDeliveryReceiptInput!): DeliveryReceipt!
  updateItemInChangeOrder(changeOrderItemId: ID!, itemInput: ChangeOrderItemInput!): ChangeOrder!
  updateItemsInOrder(itemInputs: [ItemInput!]!, orderId: ID!): Order!

  """
  Modify requisition items while the associated requisition remains in a draft state.
  """
  updateItemsInRequisition(itemInputs: [RequisitionItemUpdateInput!]!, requisitionId: ID!): Requisition!
  updateJob(id: ID!, input: JobUpdateInput!): Job!
  updateLocation(input: LocationInput!, locationId: ID!): Location!
  updateOrderContact(contactId: ID!, orderId: ID!): Order!
  updateOrderDetails(orderId: ID!, orderInput: OrderInput!): Order!
  updateOrderExportConfig(orderExportConfigId: ID!, orderExportConfigInput: OrderExportConfigInput!): OrderExportConfig!
  updateOrderIntegrationData(itemIntegrationData: JSON = "{}", orderId: ID!, orderIntegrationData: JSON = "{}"): Order!
  updateQuickbooksSettings(settings: JSON!): JSON!
  updateQuote(input: QuoteInput!, quoteId: ID!): Quote!
  updateRelease(releaseId: ID!, releaseInput: ReleaseInput!): Release!
  updateRequisitionDetails(requisitionId: ID!, requisitionInput: RequisitionInput!): Requisition!
  updateRequisitionTemplateDetails(description: String, id: ID!, name: String): RequisitionTemplate!
  updateUser(id: ID, userUpdateInput: UserUpdateInput!): User!
  updateUserSettings(input: MultipleUserSettingsInput!): [User!]!
  uploadAvatar(file: Upload!): User!
  uploadVendorPricing(file: Upload!, vendorId: ID!): VendorUploadReturn!
  voidChangeOrder(changeOrderId: ID!): ChangeOrder!
}

type Order {
  attachments(after: String, before: String, first: Int, last: Int, orderBy: FileOrderByInput, skip: Int, where: FileWhereInput): [File!]
  baseCost: Float
  baseCostFloat: Float
  bidByDate: DateTime
  bidNumber: String
  bidStartedAt: DateTime
  buyer: Organization!
  changeOrders(after: String, before: String, first: Int, last: Int, orderBy: ChangeOrderOrderByInput, skip: Int, where: ChangeOrderWhereInput): [ChangeOrder!]
  closedAt: DateTime
  closedBy: User
  collaborators(after: String, before: String, first: Int, last: Int, orderBy: OrderCollaboratorOrderByInput, skip: Int, where: OrderCollaboratorWhereInput): [OrderCollaborator!]
  comments(after: String, before: String, first: Int, last: Int, orderBy: OrderCommentOrderByInput, skip: Int, where: OrderCommentWhereInput): [OrderComment!]
  createdAt: DateTime!
  createdBy: User!
  deliveries(after: String, before: String, first: Int, last: Int, orderBy: DeliveryOrderByInput, skip: Int, where: DeliveryWhereInput): [Delivery!]
  deliveryAddress: String
  deliveryNotes: String
  deliveryRunSelection: String
  deltas(after: String, before: String, first: Int, last: Int, orderBy: OrderDeltaOrderByInput, skip: Int, where: OrderDeltaWhereInput): [OrderDelta!]
  discount: Float
  discountFloat: Float
  distributorCompanyName: String
  distributorContactEmail: String
  distributorContactName: String
  distributorContactPhone: String
  distributorDetails: Json
  fieldContactName: String
  fieldContactPhone: String
  fieldSmsEnabled: Boolean!
  flagged: Boolean!
  flaggedAt: DateTime
  flagMessage: String
  fromAcknowledgement: Boolean!
  history(orderBy: String = "createdAt_ASC"): [OrderEvent!]!
  id: ID!
  integrationData: Json
  issuedFromRFQ: Order
  issuedOrder: Order
  items: [Item!]!
  job: Job
  name: String
  needByDateDay: DateTime
  needByDateTime: DateTime
  needByWindow: String!
  notes: String
  purchaseOrderNumber: String
  quotes(after: String, before: String, first: Int, last: Int, orderBy: QuoteOrderByInput, skip: Int, where: QuoteWhereInput): [Quote!]
  releases(after: String, before: String, first: Int, last: Int, orderBy: ReleaseOrderByInput, skip: Int, where: ReleaseWhereInput): [Release!]
  requisition: Requisition
  rfqState: String!
  salesTax: Float
  seller: Organization
  shippingCost: Float
  shippingCostFloat: Float
  snapshots: [DateTime!]!
  state: String!
  status: OrderStatus!
  taxCode: TaxCode

  """
  Indicates that the order is exempt from any and all tax rates entered on line items
  """
  taxExempt: Boolean!
  type: String
  updatedAt: DateTime!
  updatedBy: User!
  value: String
  vendor: Vendor
}

type OrderCollaborator {
  createdAt: DateTime!
  id: ID!
  order: Order!
  updatedAt: DateTime!
  user: User!
}

enum OrderCollaboratorOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OrderCollaboratorWhereInput {
  AND: [OrderCollaboratorWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [OrderCollaboratorWhereInput!]
  OR: [OrderCollaboratorWhereInput!]
  order: OrderWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  user: UserWhereInput
}

type OrderComment {
  createdAt: DateTime!
  createdBy: User!
  id: ID!
  message: String!
  order: Order!
  updatedAt: DateTime!
}

input OrderCommentInput {
  message: String
}

enum OrderCommentOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  message_ASC
  message_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OrderCommentWhereInput {
  AND: [OrderCommentWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  message: String
  message_contains: String
  message_ends_with: String
  message_gt: String
  message_gte: String
  message_in: [String!]
  message_lt: String
  message_lte: String
  message_not: String
  message_not_contains: String
  message_not_ends_with: String
  message_not_in: [String!]
  message_not_starts_with: String
  message_starts_with: String
  NOT: [OrderCommentWhereInput!]
  OR: [OrderCommentWhereInput!]
  order: OrderWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum OrderDeliveryRunType {
  Custom
  FirstRun
  NA
  SecondRun
}

type OrderDelta {
  createdAt: DateTime!
  diff: Json!
  event: OrderEvent
  id: ID!
  order: Order!
  updatedAt: DateTime!
}

enum OrderDeltaOrderByInput {
  createdAt_ASC
  createdAt_DESC
  diff_ASC
  diff_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OrderDeltaWhereInput {
  AND: [OrderDeltaWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  event: OrderEventWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [OrderDeltaWhereInput!]
  OR: [OrderDeltaWhereInput!]
  order: OrderWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type OrderEvent {
  createdAt: DateTime!
  delta: OrderDelta
  erp: String
  file: File
  forwardedTo: String
  id: ID!
  metadata: Json
  order: Order!
  type: String!
  updatedAt: DateTime!
  user: User
}

enum OrderEventType {
  CHANGE_ORDER_CREATED
  CHANGE_ORDER_VOID
  DELIVERY_CANCELLED
  DELIVERY_REQUESTED
  ORDER_ACKNOWLEDGED
  ORDER_ATTACHMENT_ADDED
  ORDER_CANCELLED
  ORDER_CLOSED
  ORDER_DELIVERY
  ORDER_FLAG_CLOSED
  ORDER_FLAG_OPENED
  ORDER_FORWARDED
  ORDER_FROM_ACK
  ORDER_FROM_RFQ
  ORDER_IMPORTED_FROM_ERP
  ORDER_ITEMS_MFR_RELEASE
  ORDER_ITEMS_MODIFIED
  ORDER_LINKED_TO_ERP
  ORDER_REJECTED
  ORDER_REOPENED
  ORDER_REQUESTED
  RFQ_SENT
}

input OrderEventWhereInput {
  AND: [OrderEventWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  delta: OrderDeltaWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [OrderEventWhereInput!]
  OR: [OrderEventWhereInput!]
  order: OrderWhereInput
  type: String
  type_contains: String
  type_ends_with: String
  type_gt: String
  type_gte: String
  type_in: [String!]
  type_lt: String
  type_lte: String
  type_not: String
  type_not_contains: String
  type_not_ends_with: String
  type_not_in: [String!]
  type_not_starts_with: String
  type_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type OrderExportConfig {
  aliases: Json!
  columns: [String!]!
  createdAt: DateTime!
  id: ID!
  includeHeaders: Boolean!
  name: String!
  organization: Organization!
  updatedAt: DateTime!
}

input OrderExportConfigInput {
  aliases: JSON
  columns: [String!]!
  includeHeaders: Boolean!
  name: String!
}

enum OrderExportConfigOrderByInput {
  aliases_ASC
  aliases_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  includeHeaders_ASC
  includeHeaders_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OrderExportConfigWhereInput {
  AND: [OrderExportConfigWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  includeHeaders: Boolean
  includeHeaders_not: Boolean
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OrderExportConfigWhereInput!]
  OR: [OrderExportConfigWhereInput!]
  organization: OrganizationWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input OrderFlagInput {
  flagged: Boolean
  flagMessage: String
}

input OrderForwardInput {
  email: String
  emailBody: String
  subjectLine: String
}

input OrderInput {
  baseCost: Float
  bidByDate: DateTime
  bidNumber: String
  deliveryAddress: String
  deliveryNotes: String
  deliveryRunSelection: OrderDeliveryRunType
  discount: Float
  distributorCompanyName: String
  distributorContactEmail: String
  distributorContactName: String
  distributorContactPhone: String
  fieldContactName: String
  fieldContactPhone: String
  fieldSmsEnabled: Boolean
  fromAcknowledgement: Boolean
  integrationData: JSON
  jobCode: ID
  jobId: ID
  name: String
  needByDateDay: DateTime
  needByDateTime: DateTime
  needByWindow: String
  notes: String
  purchaseOrderNumber: String
  shippingCost: Float
  taxCodeId: ID
  taxExempt: Boolean
  type: OrderType
  vendorId: ID
}

enum OrderOrderByInput {
  baseCostFloat_ASC
  baseCostFloat_DESC
  bidByDate_ASC
  bidByDate_DESC
  bidNumber_ASC
  bidNumber_DESC
  bidStartedAt_ASC
  bidStartedAt_DESC
  createdAt_ASC
  createdAt_DESC
  deliveryAddress_ASC
  deliveryAddress_DESC
  deliveryNotes_ASC
  deliveryNotes_DESC
  deliveryRunSelection_ASC
  deliveryRunSelection_DESC
  discountFloat_ASC
  discountFloat_DESC
  distributorDetails_ASC
  distributorDetails_DESC
  fieldContactName_ASC
  fieldContactName_DESC
  fieldContactPhone_ASC
  fieldContactPhone_DESC
  fieldSmsEnabled_ASC
  fieldSmsEnabled_DESC
  flagged_ASC
  flagged_DESC
  flaggedAt_ASC
  flaggedAt_DESC
  flagMessage_ASC
  flagMessage_DESC
  fromAcknowledgement_ASC
  fromAcknowledgement_DESC
  id_ASC
  id_DESC
  integrationData_ASC
  integrationData_DESC
  name_ASC
  name_DESC
  needByDateDay_ASC
  needByDateDay_DESC
  needByDateTime_ASC
  needByDateTime_DESC
  needByWindow_ASC
  needByWindow_DESC
  notes_ASC
  notes_DESC
  purchaseOrderNumber_ASC
  purchaseOrderNumber_DESC
  rfqState_ASC
  rfqState_DESC
  shippingCostFloat_ASC
  shippingCostFloat_DESC
  state_ASC
  state_DESC
  taxExempt_ASC
  taxExempt_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type OrderSearch {
  bidByDate: DateTime
  bidNumber: String
  bidsRemaining: Int!
  bidStartedAt: DateTime
  buyerName: String
  createdAt: DateTime!
  createdByName: String
  deliveryAddress: String
  fieldContactName: String
  flagged: Boolean!
  flaggedAt: DateTime
  flagMessage: String
  id: ID!
  integrationData: JSON
  jobCode: String
  jobId: ID
  jobName: String
  needByDateDay: DateTime
  purchaseOrderNumber: String
  rfqState: String!
  sellerName: String
  state: String!
  status: OrderStatus!
  type: OrderType!
}

type OrdersSummary {
  numActive: Int!
  numFlagged: Int!
}

enum OrderStatus {
  Acknowledged
  Cancelled
  Closed
  Complete
  Draft
  Waiting
}

enum OrderType {
  HOLD_FOR_RELEASE
  LOT
  PRE_ACKNOWLEDGED
  REQUEST_FOR_QUOTE
  STANDARD
}

input OrderWhereInput {
  AND: [OrderWhereInput!]
  attachments_every: FileWhereInput
  attachments_none: FileWhereInput
  attachments_some: FileWhereInput
  baseCostFloat: Float
  baseCostFloat_gt: Float
  baseCostFloat_gte: Float
  baseCostFloat_in: [Float!]
  baseCostFloat_lt: Float
  baseCostFloat_lte: Float
  baseCostFloat_not: Float
  baseCostFloat_not_in: [Float!]
  bidByDate: DateTime
  bidByDate_gt: DateTime
  bidByDate_gte: DateTime
  bidByDate_in: [DateTime!]
  bidByDate_lt: DateTime
  bidByDate_lte: DateTime
  bidByDate_not: DateTime
  bidByDate_not_in: [DateTime!]
  bidNumber: String
  bidNumber_contains: String
  bidNumber_ends_with: String
  bidNumber_gt: String
  bidNumber_gte: String
  bidNumber_in: [String!]
  bidNumber_lt: String
  bidNumber_lte: String
  bidNumber_not: String
  bidNumber_not_contains: String
  bidNumber_not_ends_with: String
  bidNumber_not_in: [String!]
  bidNumber_not_starts_with: String
  bidNumber_starts_with: String
  bidStartedAt: DateTime
  bidStartedAt_gt: DateTime
  bidStartedAt_gte: DateTime
  bidStartedAt_in: [DateTime!]
  bidStartedAt_lt: DateTime
  bidStartedAt_lte: DateTime
  bidStartedAt_not: DateTime
  bidStartedAt_not_in: [DateTime!]
  buyer: OrganizationWhereInput
  changeOrders_every: ChangeOrderWhereInput
  changeOrders_none: ChangeOrderWhereInput
  changeOrders_some: ChangeOrderWhereInput
  collaborators_every: OrderCollaboratorWhereInput
  collaborators_none: OrderCollaboratorWhereInput
  collaborators_some: OrderCollaboratorWhereInput
  comments_every: OrderCommentWhereInput
  comments_none: OrderCommentWhereInput
  comments_some: OrderCommentWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  deliveries_every: DeliveryWhereInput
  deliveries_none: DeliveryWhereInput
  deliveries_some: DeliveryWhereInput
  deliveryAddress: String
  deliveryAddress_contains: String
  deliveryAddress_ends_with: String
  deliveryAddress_gt: String
  deliveryAddress_gte: String
  deliveryAddress_in: [String!]
  deliveryAddress_lt: String
  deliveryAddress_lte: String
  deliveryAddress_not: String
  deliveryAddress_not_contains: String
  deliveryAddress_not_ends_with: String
  deliveryAddress_not_in: [String!]
  deliveryAddress_not_starts_with: String
  deliveryAddress_starts_with: String
  deliveryNotes: String
  deliveryNotes_contains: String
  deliveryNotes_ends_with: String
  deliveryNotes_gt: String
  deliveryNotes_gte: String
  deliveryNotes_in: [String!]
  deliveryNotes_lt: String
  deliveryNotes_lte: String
  deliveryNotes_not: String
  deliveryNotes_not_contains: String
  deliveryNotes_not_ends_with: String
  deliveryNotes_not_in: [String!]
  deliveryNotes_not_starts_with: String
  deliveryNotes_starts_with: String
  deliveryRunSelection: String
  deliveryRunSelection_contains: String
  deliveryRunSelection_ends_with: String
  deliveryRunSelection_gt: String
  deliveryRunSelection_gte: String
  deliveryRunSelection_in: [String!]
  deliveryRunSelection_lt: String
  deliveryRunSelection_lte: String
  deliveryRunSelection_not: String
  deliveryRunSelection_not_contains: String
  deliveryRunSelection_not_ends_with: String
  deliveryRunSelection_not_in: [String!]
  deliveryRunSelection_not_starts_with: String
  deliveryRunSelection_starts_with: String
  deltas_every: OrderDeltaWhereInput
  deltas_none: OrderDeltaWhereInput
  deltas_some: OrderDeltaWhereInput
  discountFloat: Float
  discountFloat_gt: Float
  discountFloat_gte: Float
  discountFloat_in: [Float!]
  discountFloat_lt: Float
  discountFloat_lte: Float
  discountFloat_not: Float
  discountFloat_not_in: [Float!]
  fieldContactName: String
  fieldContactName_contains: String
  fieldContactName_ends_with: String
  fieldContactName_gt: String
  fieldContactName_gte: String
  fieldContactName_in: [String!]
  fieldContactName_lt: String
  fieldContactName_lte: String
  fieldContactName_not: String
  fieldContactName_not_contains: String
  fieldContactName_not_ends_with: String
  fieldContactName_not_in: [String!]
  fieldContactName_not_starts_with: String
  fieldContactName_starts_with: String
  fieldContactPhone: String
  fieldContactPhone_contains: String
  fieldContactPhone_ends_with: String
  fieldContactPhone_gt: String
  fieldContactPhone_gte: String
  fieldContactPhone_in: [String!]
  fieldContactPhone_lt: String
  fieldContactPhone_lte: String
  fieldContactPhone_not: String
  fieldContactPhone_not_contains: String
  fieldContactPhone_not_ends_with: String
  fieldContactPhone_not_in: [String!]
  fieldContactPhone_not_starts_with: String
  fieldContactPhone_starts_with: String
  fieldSmsEnabled: Boolean
  fieldSmsEnabled_not: Boolean
  flagged: Boolean
  flagged_not: Boolean
  flaggedAt: DateTime
  flaggedAt_gt: DateTime
  flaggedAt_gte: DateTime
  flaggedAt_in: [DateTime!]
  flaggedAt_lt: DateTime
  flaggedAt_lte: DateTime
  flaggedAt_not: DateTime
  flaggedAt_not_in: [DateTime!]
  flagMessage: String
  flagMessage_contains: String
  flagMessage_ends_with: String
  flagMessage_gt: String
  flagMessage_gte: String
  flagMessage_in: [String!]
  flagMessage_lt: String
  flagMessage_lte: String
  flagMessage_not: String
  flagMessage_not_contains: String
  flagMessage_not_ends_with: String
  flagMessage_not_in: [String!]
  flagMessage_not_starts_with: String
  flagMessage_starts_with: String
  fromAcknowledgement: Boolean
  fromAcknowledgement_not: Boolean
  history_every: OrderEventWhereInput
  history_none: OrderEventWhereInput
  history_some: OrderEventWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  issuedFromRFQ: OrderWhereInput
  issuedOrder: OrderWhereInput
  items_every: ItemWhereInput
  items_none: ItemWhereInput
  items_some: ItemWhereInput
  job: JobWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  needByDateDay: DateTime
  needByDateDay_gt: DateTime
  needByDateDay_gte: DateTime
  needByDateDay_in: [DateTime!]
  needByDateDay_lt: DateTime
  needByDateDay_lte: DateTime
  needByDateDay_not: DateTime
  needByDateDay_not_in: [DateTime!]
  needByDateTime: DateTime
  needByDateTime_gt: DateTime
  needByDateTime_gte: DateTime
  needByDateTime_in: [DateTime!]
  needByDateTime_lt: DateTime
  needByDateTime_lte: DateTime
  needByDateTime_not: DateTime
  needByDateTime_not_in: [DateTime!]
  needByWindow: String
  needByWindow_contains: String
  needByWindow_ends_with: String
  needByWindow_gt: String
  needByWindow_gte: String
  needByWindow_in: [String!]
  needByWindow_lt: String
  needByWindow_lte: String
  needByWindow_not: String
  needByWindow_not_contains: String
  needByWindow_not_ends_with: String
  needByWindow_not_in: [String!]
  needByWindow_not_starts_with: String
  needByWindow_starts_with: String
  NOT: [OrderWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [OrderWhereInput!]
  purchaseOrderNumber: String
  purchaseOrderNumber_contains: String
  purchaseOrderNumber_ends_with: String
  purchaseOrderNumber_gt: String
  purchaseOrderNumber_gte: String
  purchaseOrderNumber_in: [String!]
  purchaseOrderNumber_lt: String
  purchaseOrderNumber_lte: String
  purchaseOrderNumber_not: String
  purchaseOrderNumber_not_contains: String
  purchaseOrderNumber_not_ends_with: String
  purchaseOrderNumber_not_in: [String!]
  purchaseOrderNumber_not_starts_with: String
  purchaseOrderNumber_starts_with: String
  quotes_every: QuoteWhereInput
  quotes_none: QuoteWhereInput
  quotes_some: QuoteWhereInput
  releases_every: ReleaseWhereInput
  releases_none: ReleaseWhereInput
  releases_some: ReleaseWhereInput
  requisition: RequisitionWhereInput
  rfqState: String
  rfqState_contains: String
  rfqState_ends_with: String
  rfqState_gt: String
  rfqState_gte: String
  rfqState_in: [String!]
  rfqState_lt: String
  rfqState_lte: String
  rfqState_not: String
  rfqState_not_contains: String
  rfqState_not_ends_with: String
  rfqState_not_in: [String!]
  rfqState_not_starts_with: String
  rfqState_starts_with: String
  seller: OrganizationWhereInput
  shippingCostFloat: Float
  shippingCostFloat_gt: Float
  shippingCostFloat_gte: Float
  shippingCostFloat_in: [Float!]
  shippingCostFloat_lt: Float
  shippingCostFloat_lte: Float
  shippingCostFloat_not: Float
  shippingCostFloat_not_in: [Float!]
  state: String
  state_contains: String
  state_ends_with: String
  state_gt: String
  state_gte: String
  state_in: [String!]
  state_lt: String
  state_lte: String
  state_not: String
  state_not_contains: String
  state_not_ends_with: String
  state_not_in: [String!]
  state_not_starts_with: String
  state_starts_with: String
  taxCode: TaxCodeWhereInput
  taxExempt: Boolean
  taxExempt_not: Boolean
  type: String
  type_contains: String
  type_ends_with: String
  type_gt: String
  type_gte: String
  type_in: [String!]
  type_lt: String
  type_lte: String
  type_not: String
  type_not_contains: String
  type_not_ends_with: String
  type_not_in: [String!]
  type_not_starts_with: String
  type_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  updatedBy: UserWhereInput
  vendor: VendorWhereInput
}

type Organization {
  defaultLocations: [Location!]!
  defaultOrderExportConfig: OrderExportConfig
  generateOrderNumbers: Boolean!
  id: ID!
  integrationData: Json
  logo: String
  name: String!
  orderExportConfigs(after: String, before: String, first: Int, last: Int, orderBy: OrderExportConfigOrderByInput, skip: Int, where: OrderExportConfigWhereInput): [OrderExportConfig!]

  """
  List users with the "Procurement" role.  Only provides results within the user's organization.
  """
  procurementUsers: [User!]!
  type: OrgType
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]
}

enum OrganizationType {
  Contractor
  Distributor
  Manufacturer
}

input OrganizationWhereInput {
  activated: Boolean
  activated_not: Boolean
  AND: [OrganizationWhereInput!]
  contacts_every: ContactWhereInput
  contacts_none: ContactWhereInput
  contacts_some: ContactWhereInput
  costCategories_every: CostCategoryWhereInput
  costCategories_none: CostCategoryWhereInput
  costCategories_some: CostCategoryWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  defaultOrderExportConfig: OrderExportConfigWhereInput
  generateOrderNumbers: Boolean
  generateOrderNumbers_not: Boolean
  glCodes_every: GLCodeWhereInput
  glCodes_none: GLCodeWhereInput
  glCodes_some: GLCodeWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  jobs_every: JobWhereInput
  jobs_none: JobWhereInput
  jobs_some: JobWhereInput
  locations_every: LocationWhereInput
  locations_none: LocationWhereInput
  locations_some: LocationWhereInput
  logo: String
  logo_contains: String
  logo_ends_with: String
  logo_gt: String
  logo_gte: String
  logo_in: [String!]
  logo_lt: String
  logo_lte: String
  logo_not: String
  logo_not_contains: String
  logo_not_ends_with: String
  logo_not_in: [String!]
  logo_not_starts_with: String
  logo_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OrganizationWhereInput!]
  OR: [OrganizationWhereInput!]
  orderExportConfigs_every: OrderExportConfigWhereInput
  orderExportConfigs_none: OrderExportConfigWhereInput
  orderExportConfigs_some: OrderExportConfigWhereInput
  phaseCodes_every: PhaseCodeWhereInput
  phaseCodes_none: PhaseCodeWhereInput
  phaseCodes_some: PhaseCodeWhereInput
  quickbooksItems_every: QuickbooksItemWhereInput
  quickbooksItems_none: QuickbooksItemWhereInput
  quickbooksItems_some: QuickbooksItemWhereInput
  taxCodes_every: TaxCodeWhereInput
  taxCodes_none: TaxCodeWhereInput
  taxCodes_some: TaxCodeWhereInput
  type: OrgType
  type_in: [OrgType!]
  type_not: OrgType
  type_not_in: [OrgType!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  users_every: UserWhereInput
  users_none: UserWhereInput
  users_some: UserWhereInput
  vendors_every: VendorWhereInput
  vendors_none: VendorWhereInput
  vendors_some: VendorWhereInput
  warehouses_every: WarehouseWhereInput
  warehouses_none: WarehouseWhereInput
  warehouses_some: WarehouseWhereInput
}

enum OrgType {
  BUYER
  SELLER
}

type PhaseCode {
  code: String!
  costCategories(after: String, before: String, first: Int, last: Int, orderBy: CostCategoryOrderByInput, skip: Int, where: CostCategoryWhereInput): [CostCategory!]
  createdAt: DateTime!
  description: String!
  id: ID!
  integrationData: Json
  job: Job
  org: Organization!
  sage100ContractorPhaseCodeMapping: Sage100ContractorPhaseCodeMapping
  sage300CREPhaseCodeMapping: Sage300CREPhaseCodeMapping
  updatedAt: DateTime!
}

input PhaseCodeInput {
  code: String
  description: String
  integrationData: JSON
}

enum PhaseCodeOrderByInput {
  code_ASC
  code_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  integrationData_ASC
  integrationData_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input PhaseCodeWhereInput {
  AND: [PhaseCodeWhereInput!]
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  costCategories_every: CostCategoryWhereInput
  costCategories_none: CostCategoryWhereInput
  costCategories_some: CostCategoryWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  job: JobWhereInput
  NOT: [PhaseCodeWhereInput!]
  OR: [PhaseCodeWhereInput!]
  org: OrganizationWhereInput
  sage100ContractorPhaseCodeMapping: Sage100ContractorPhaseCodeMappingWhereInput
  sage300CREPhaseCodeMapping: Sage300CREPhaseCodeMappingWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type PricingInformation {
  unitPrice: Float
  uom: String
}

type Query {
  contacts(queryString: String): [Contact!]!
  contactSearch(queryString: String): [Contact!]!
  costCategories(phaseCode: String, phaseCodeId: ID, queryString: String = ""): [CostCategory!]!
  costCategory(id: ID): CostCategory!
  deliveryReceipt(id: ID!): DeliveryReceipt!
  deliveryReceipts(
    createdByIds: [ID!]

    """Filter for receipts that have been marked as deleted."""
    deleted: Boolean = false
    jobId: ID
    orderBy: DeliveryReceiptOrderByInput = createdAt_DESC

    """Filter deliveries by associated purchase order."""
    purchaseOrderId: ID
    state_in: [DeliveryReceiptState!]
  ): [DeliveryReceipt!]!
  getAllItemsForVendor(vendorId: ID!): [VendorPrice!]!
  getJobReportsList: [JobReport!]!
  getPriceAndVendorsForUPC(upc: String!): [VendorPrice!]!
  getVendorPriceForUPC(upc: String!, vendorId: ID!): PricingInformation!
  glCode(id: ID): GLCode!
  glCodes(queryString: String = ""): [GLCode!]!
  job(
    id: ID

    """Look up job within requesting user's organization by job code"""
    jobCode: String
  ): Job
  jobs(queryString: String, state: JobState): [Job!]!
  jobSearch(
    """Quantity of results to return"""
    first: Int

    """Filter by user's job-join status."""
    membership: JobMembershipFilter = ALL_JOBS
    queryString: String

    """Quantity of results to skip before returning `first` results"""
    skip: Int
    state: JobState
  ): [Job!]!
  location(id: ID!): Location!
  locations(jobId: String, queryString: String): [Location!]!
  order(
    """Look up order within requesting user's organization by bid number"""
    bidNumber: String
    id: ID

    """
    Look up order within requesting user's organization by purchase order number
    """
    purchaseOrderNumber: String
  ): Order
  orderComments(orderBy: String, orderId: ID!): [OrderComment!]!
  orderFieldContactSearch(queryString: String): [ContactUser!]!
  orderHistory(orderBy: String, orderId: ID!): [OrderEvent!]!
  orders(
    after: String
    before: String
    first: Int

    """Filter for only orders which correspond to given job."""
    jobID: ID
    last: Int
    orderBy: OrderOrderByInput
    queryString: String

    """
    Filter for only orders which have an associated requisition from the specified user ID.
    """
    requisitionCreatedById: ID
    skip: Int
    state_not_in: [String!]
    where: OrderWhereInput
  ): [Order!]!
  orderSearch(orderType: String = "active", orderView: String = "user", queryString: String, vendorId: ID): [OrderSearch!]!
  ordersSummary: OrdersSummary!
  organization: Organization!
  phaseCode(id: ID): PhaseCode!
  phaseCodes(jobId: ID, queryString: String = ""): [PhaseCode!]!
  quickbooksAccounts(type: String): [QuickbooksAccount!]!
  quickbooksCustomerSearch(queryString: String): [QuickbooksCustomer!]!
  quickbooksItemClasses: [QuickbooksItemClass!]!
  quickbooksItems: [QuickbooksItem!]!

  """Get requisition items for user to re-order."""
  reorderItems(
    """Filter items by job on which they have been previously ordered"""
    jobId: ID
  ): [RequisitionItem!]!
  requisition(id: ID!): Requisition!
  requisitions(
    """Filter by user ID of requisition creator"""
    createdById: ID

    """Filter requisitions by associated job"""
    jobId: ID
    requisitionType: String

    """Filter requisitions by negative state"""
    state_not_in: [RequisitionState!]
  ): [Requisition!]!
  requisitionTemplate(id: ID!): RequisitionTemplate

  """Get user's requisition templates."""
  requisitionTemplates: [RequisitionTemplate!]!
  taxCode(id: ID): TaxCode!
  taxCodes(queryString: String = ""): [TaxCode!]!
  user: User!
  userPasswordChangeRequest(code: String!): User!
  users(
    """Filter users by their assigned role"""
    role_in: [String!]
  ): [User!]!
  userSearch(queryString: String): [User!]!
  vendor(id: ID): Vendor!
  vendors(first: Int, pageSize: Int, queryString: String): [Vendor!]!
  vendorSearch(
    """Quantity of results to return"""
    first: Int

    """Direction to order vendor results, for example createdAt_DESC"""
    orderBy: VendorOrderByInput
    queryString: String

    """Quantity of results to skip over"""
    skip: Int
  ): VendorSearchResult!
}

type QuickbooksAccount {
  id: String!
  name: String!
  type: String!
}

type QuickbooksCustomer {
  id: String!
  name: String!
}

type QuickbooksItem {
  description: String
  id: ID!
  name: String!
  qboId: ID!
}

type QuickbooksItemClass {
  id: String!
  name: String!
}

input QuickbooksItemWhereInput {
  AND: [QuickbooksItemWhereInput!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [QuickbooksItemWhereInput!]
  OR: [QuickbooksItemWhereInput!]
  org: OrganizationWhereInput
  qboId: ID
  qboId_contains: ID
  qboId_ends_with: ID
  qboId_gt: ID
  qboId_gte: ID
  qboId_in: [ID!]
  qboId_lt: ID
  qboId_lte: ID
  qboId_not: ID
  qboId_not_contains: ID
  qboId_not_ends_with: ID
  qboId_not_in: [ID!]
  qboId_not_starts_with: ID
  qboId_starts_with: ID
}

type quickbooksOnlineJobMapping {
  job: Job!
  qboId: ID!
}

input quickbooksOnlineJobMappingWhereInput {
  AND: [quickbooksOnlineJobMappingWhereInput!]
  job: JobWhereInput
  NOT: [quickbooksOnlineJobMappingWhereInput!]
  OR: [quickbooksOnlineJobMappingWhereInput!]
  qboId: ID
  qboId_contains: ID
  qboId_ends_with: ID
  qboId_gt: ID
  qboId_gte: ID
  qboId_in: [ID!]
  qboId_lt: ID
  qboId_lte: ID
  qboId_not: ID
  qboId_not_contains: ID
  qboId_not_ends_with: ID
  qboId_not_in: [ID!]
  qboId_not_starts_with: ID
  qboId_starts_with: ID
}

type quickbooksOnlineTaxCodeMapping {
  qboId: ID!
  taxCode: TaxCode!
}

input quickbooksOnlineTaxCodeMappingWhereInput {
  AND: [quickbooksOnlineTaxCodeMappingWhereInput!]
  NOT: [quickbooksOnlineTaxCodeMappingWhereInput!]
  OR: [quickbooksOnlineTaxCodeMappingWhereInput!]
  qboId: ID
  qboId_contains: ID
  qboId_ends_with: ID
  qboId_gt: ID
  qboId_gte: ID
  qboId_in: [ID!]
  qboId_lt: ID
  qboId_lte: ID
  qboId_not: ID
  qboId_not_contains: ID
  qboId_not_ends_with: ID
  qboId_not_in: [ID!]
  qboId_not_starts_with: ID
  qboId_starts_with: ID
  taxCode: TaxCodeWhereInput
}

type Quote {
  contact: Contact
  createdAt: DateTime!
  id: ID!
  order: Order!
  org: Organization!
  quoteAmount: Float
  quotedAt: DateTime
  updatedAt: DateTime!
}

input QuoteInput {
  quoteAmount: Float
}

enum QuoteOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  quoteAmount_ASC
  quoteAmount_DESC
  quotedAt_ASC
  quotedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input QuoteWhereInput {
  AND: [QuoteWhereInput!]
  contact: ContactWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [QuoteWhereInput!]
  OR: [QuoteWhereInput!]
  order: OrderWhereInput
  org: OrganizationWhereInput
  quoteAmount: Float
  quoteAmount_gt: Float
  quoteAmount_gte: Float
  quoteAmount_in: [Float!]
  quoteAmount_lt: Float
  quoteAmount_lte: Float
  quoteAmount_not: Float
  quoteAmount_not_in: [Float!]
  quotedAt: DateTime
  quotedAt_gt: DateTime
  quotedAt_gte: DateTime
  quotedAt_in: [DateTime!]
  quotedAt_lt: DateTime
  quotedAt_lte: DateTime
  quotedAt_not: DateTime
  quotedAt_not_in: [DateTime!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Release {
  cancelledAt: DateTime
  cancelledReason: String
  createdAt: DateTime!
  createdBy: User!
  deliveryContactName: String
  deliveryContactPhone: String
  deliveryLocation: Location
  id: ID!
  needByDateDay: DateTime
  needByWindow: String
  notes: String
  order: Order!
  releaseItems(after: String, before: String, first: Int, last: Int, orderBy: ReleaseItemOrderByInput, skip: Int, where: ReleaseItemWhereInput): [ReleaseItem!]
  releaseNumber: String!
  updatedAt: DateTime!
}

input ReleaseInput {
  deliveryContactName: String!
  deliveryContactPhone: String!
  deliveryLocationId: ID!
  needByDateDay: DateTime!
  needByWindow: String!
  notes: String
  releaseItems: [ReleaseItemInput!]!
}

type ReleaseItem {
  backorderLeadTime: String
  backorderQuantity: Int
  createdAt: DateTime!
  id: ID!
  lineItem: Item!
  quantityReleased: Int!
  release: Release!
  updatedAt: DateTime!
}

input ReleaseItemInput {
  backorderLeadTime: String
  id: ID
  lineItemId: ID!
  quantityToBackorder: Int
  quantityToRelease: Int!
}

enum ReleaseItemOrderByInput {
  backorderLeadTime_ASC
  backorderLeadTime_DESC
  backorderQuantity_ASC
  backorderQuantity_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  quantityReleased_ASC
  quantityReleased_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ReleaseItemWhereInput {
  AND: [ReleaseItemWhereInput!]
  backorderLeadTime: String
  backorderLeadTime_contains: String
  backorderLeadTime_ends_with: String
  backorderLeadTime_gt: String
  backorderLeadTime_gte: String
  backorderLeadTime_in: [String!]
  backorderLeadTime_lt: String
  backorderLeadTime_lte: String
  backorderLeadTime_not: String
  backorderLeadTime_not_contains: String
  backorderLeadTime_not_ends_with: String
  backorderLeadTime_not_in: [String!]
  backorderLeadTime_not_starts_with: String
  backorderLeadTime_starts_with: String
  backorderQuantity: Int
  backorderQuantity_gt: Int
  backorderQuantity_gte: Int
  backorderQuantity_in: [Int!]
  backorderQuantity_lt: Int
  backorderQuantity_lte: Int
  backorderQuantity_not: Int
  backorderQuantity_not_in: [Int!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lineItem: ItemWhereInput
  NOT: [ReleaseItemWhereInput!]
  OR: [ReleaseItemWhereInput!]
  quantityReleased: Int
  quantityReleased_gt: Int
  quantityReleased_gte: Int
  quantityReleased_in: [Int!]
  quantityReleased_lt: Int
  quantityReleased_lte: Int
  quantityReleased_not: Int
  quantityReleased_not_in: [Int!]
  release: ReleaseWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum ReleaseOrderByInput {
  cancelledAt_ASC
  cancelledAt_DESC
  cancelledReason_ASC
  cancelledReason_DESC
  createdAt_ASC
  createdAt_DESC
  deliveryContactName_ASC
  deliveryContactName_DESC
  deliveryContactPhone_ASC
  deliveryContactPhone_DESC
  id_ASC
  id_DESC
  needByDateDay_ASC
  needByDateDay_DESC
  needByWindow_ASC
  needByWindow_DESC
  notes_ASC
  notes_DESC
  releaseNumber_ASC
  releaseNumber_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ReleaseWhereInput {
  AND: [ReleaseWhereInput!]
  cancelledAt: DateTime
  cancelledAt_gt: DateTime
  cancelledAt_gte: DateTime
  cancelledAt_in: [DateTime!]
  cancelledAt_lt: DateTime
  cancelledAt_lte: DateTime
  cancelledAt_not: DateTime
  cancelledAt_not_in: [DateTime!]
  cancelledReason: String
  cancelledReason_contains: String
  cancelledReason_ends_with: String
  cancelledReason_gt: String
  cancelledReason_gte: String
  cancelledReason_in: [String!]
  cancelledReason_lt: String
  cancelledReason_lte: String
  cancelledReason_not: String
  cancelledReason_not_contains: String
  cancelledReason_not_ends_with: String
  cancelledReason_not_in: [String!]
  cancelledReason_not_starts_with: String
  cancelledReason_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  deliveryContactName: String
  deliveryContactName_contains: String
  deliveryContactName_ends_with: String
  deliveryContactName_gt: String
  deliveryContactName_gte: String
  deliveryContactName_in: [String!]
  deliveryContactName_lt: String
  deliveryContactName_lte: String
  deliveryContactName_not: String
  deliveryContactName_not_contains: String
  deliveryContactName_not_ends_with: String
  deliveryContactName_not_in: [String!]
  deliveryContactName_not_starts_with: String
  deliveryContactName_starts_with: String
  deliveryContactPhone: String
  deliveryContactPhone_contains: String
  deliveryContactPhone_ends_with: String
  deliveryContactPhone_gt: String
  deliveryContactPhone_gte: String
  deliveryContactPhone_in: [String!]
  deliveryContactPhone_lt: String
  deliveryContactPhone_lte: String
  deliveryContactPhone_not: String
  deliveryContactPhone_not_contains: String
  deliveryContactPhone_not_ends_with: String
  deliveryContactPhone_not_in: [String!]
  deliveryContactPhone_not_starts_with: String
  deliveryContactPhone_starts_with: String
  deliveryLocation: LocationWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  needByDateDay: DateTime
  needByDateDay_gt: DateTime
  needByDateDay_gte: DateTime
  needByDateDay_in: [DateTime!]
  needByDateDay_lt: DateTime
  needByDateDay_lte: DateTime
  needByDateDay_not: DateTime
  needByDateDay_not_in: [DateTime!]
  needByWindow: String
  needByWindow_contains: String
  needByWindow_ends_with: String
  needByWindow_gt: String
  needByWindow_gte: String
  needByWindow_in: [String!]
  needByWindow_lt: String
  needByWindow_lte: String
  needByWindow_not: String
  needByWindow_not_contains: String
  needByWindow_not_ends_with: String
  needByWindow_not_in: [String!]
  needByWindow_not_starts_with: String
  needByWindow_starts_with: String
  NOT: [ReleaseWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [ReleaseWhereInput!]
  order: OrderWhereInput
  releaseItems_every: ReleaseItemWhereInput
  releaseItems_none: ReleaseItemWhereInput
  releaseItems_some: ReleaseItemWhereInput
  releaseNumber: String
  releaseNumber_contains: String
  releaseNumber_ends_with: String
  releaseNumber_gt: String
  releaseNumber_gte: String
  releaseNumber_in: [String!]
  releaseNumber_lt: String
  releaseNumber_lte: String
  releaseNumber_not: String
  releaseNumber_not_contains: String
  releaseNumber_not_ends_with: String
  releaseNumber_not_in: [String!]
  releaseNumber_not_starts_with: String
  releaseNumber_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Requisition {
  createdAt: DateTime!
  createdBy: User!
  deliveryLocation: Location
  deliveryWindow: String!
  id: ID!
  identifier: String
  job: Job
  needByDateCategory: RequisitionNeedByDateCategory!
  needByDateDay: DateTime
  needByDateTime: DateTime
  needByWindow: String!
  notes: String
  orderingAgent: User
  orders(after: String, before: String, first: Int, last: Int, orderBy: OrderOrderByInput, skip: Int, where: OrderWhereInput): [Order!]
  org: Organization!
  requisitionItems: [RequisitionItem!]!
  sentAt: DateTime
  state: RequisitionState
  updatedAt: DateTime!
  updatedBy: User!
}

enum RequisitionDeliveryRunType {
  AM
  AMEarly
  ASAP
  Custom
  PM
  PMLate
}

input RequisitionInput {
  deliveryLocationId: ID
  deliveryWindow: RequisitionDeliveryRunType
  jobId: ID
  needByDateCategory: RequisitionNeedByDateCategory
  needByDateDay: DateTime
  needByTime: String
  needByWindow: String
  notes: String

  """
  ID of the user that is assigned direct responsibility for the requisition.
  """
  orderingAgentId: ID
}

type RequisitionItem {
  createdAt: DateTime!
  description: String
  id: ID!
  lineNumber: Int
  purchaseOrder: Order
  quantity: Int
  requisition: Requisition!
  state: RequisitionItemState!
  unitsOfMeasure: String
  updatedAt: DateTime!
}

input RequisitionItemInput {
  description: String
  lineNumber: Int
  quantity: Int
  unitsOfMeasure: String
}

enum RequisitionItemState {
  ACKNOWLEDGED
  ORDERED
  PROCESSING
  UNPROCESSED
}

input RequisitionItemUpdateInput {
  data: RequisitionItemInput
  id: ID
}

input RequisitionItemWhereInput {
  AND: [RequisitionItemWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lineNumber: Int
  lineNumber_gt: Int
  lineNumber_gte: Int
  lineNumber_in: [Int!]
  lineNumber_lt: Int
  lineNumber_lte: Int
  lineNumber_not: Int
  lineNumber_not_in: [Int!]
  NOT: [RequisitionItemWhereInput!]
  OR: [RequisitionItemWhereInput!]
  purchaseOrder: OrderWhereInput
  quantity: Int
  quantity_gt: Int
  quantity_gte: Int
  quantity_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_not: Int
  quantity_not_in: [Int!]
  requisition: RequisitionWhereInput
  state: RequisitionItemState
  state_in: [RequisitionItemState!]
  state_not: RequisitionItemState
  state_not_in: [RequisitionItemState!]
  unitsOfMeasure: String
  unitsOfMeasure_contains: String
  unitsOfMeasure_ends_with: String
  unitsOfMeasure_gt: String
  unitsOfMeasure_gte: String
  unitsOfMeasure_in: [String!]
  unitsOfMeasure_lt: String
  unitsOfMeasure_lte: String
  unitsOfMeasure_not: String
  unitsOfMeasure_not_contains: String
  unitsOfMeasure_not_ends_with: String
  unitsOfMeasure_not_in: [String!]
  unitsOfMeasure_not_starts_with: String
  unitsOfMeasure_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum RequisitionNeedByDateCategory {
  ASAP
  DATE
  HOLD_FOR_RELEASE
}

enum RequisitionState {
  ACKNOWLEDGED
  CLOSED
  DRAFT
  OPEN
}

type RequisitionTemplate {
  createdAt: DateTime!
  createdBy: User!
  description: String
  id: ID!

  """Ordered template line items"""
  items: [RequisitionTemplateItem!]!
  name: String
  updatedAt: DateTime!
}

"""Line item of a requisition template."""
type RequisitionTemplateItem {
  description: String!
  id: ID!

  """
  Used to present line items in a consistent order to various users.  Index starts at 1.
  """
  lineNumber: Int!
  quantity: Int!
  unitsOfMeasure: String!
}

input RequisitionTemplateItemInput {
  description: String
  quantity: Int
  unitsOfMeasure: String
}

input RequisitionWhereInput {
  AND: [RequisitionWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  deliveryLocation: LocationWhereInput
  deliveryWindow: String
  deliveryWindow_contains: String
  deliveryWindow_ends_with: String
  deliveryWindow_gt: String
  deliveryWindow_gte: String
  deliveryWindow_in: [String!]
  deliveryWindow_lt: String
  deliveryWindow_lte: String
  deliveryWindow_not: String
  deliveryWindow_not_contains: String
  deliveryWindow_not_ends_with: String
  deliveryWindow_not_in: [String!]
  deliveryWindow_not_starts_with: String
  deliveryWindow_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  identifier: String
  identifier_contains: String
  identifier_ends_with: String
  identifier_gt: String
  identifier_gte: String
  identifier_in: [String!]
  identifier_lt: String
  identifier_lte: String
  identifier_not: String
  identifier_not_contains: String
  identifier_not_ends_with: String
  identifier_not_in: [String!]
  identifier_not_starts_with: String
  identifier_starts_with: String
  job: JobWhereInput
  needByDateCategory: RequisitionNeedByDateCategory
  needByDateCategory_in: [RequisitionNeedByDateCategory!]
  needByDateCategory_not: RequisitionNeedByDateCategory
  needByDateCategory_not_in: [RequisitionNeedByDateCategory!]
  needByDateDay: DateTime
  needByDateDay_gt: DateTime
  needByDateDay_gte: DateTime
  needByDateDay_in: [DateTime!]
  needByDateDay_lt: DateTime
  needByDateDay_lte: DateTime
  needByDateDay_not: DateTime
  needByDateDay_not_in: [DateTime!]
  needByDateTime: DateTime
  needByDateTime_gt: DateTime
  needByDateTime_gte: DateTime
  needByDateTime_in: [DateTime!]
  needByDateTime_lt: DateTime
  needByDateTime_lte: DateTime
  needByDateTime_not: DateTime
  needByDateTime_not_in: [DateTime!]
  needByWindow: String
  needByWindow_contains: String
  needByWindow_ends_with: String
  needByWindow_gt: String
  needByWindow_gte: String
  needByWindow_in: [String!]
  needByWindow_lt: String
  needByWindow_lte: String
  needByWindow_not: String
  needByWindow_not_contains: String
  needByWindow_not_ends_with: String
  needByWindow_not_in: [String!]
  needByWindow_not_starts_with: String
  needByWindow_starts_with: String
  NOT: [RequisitionWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [RequisitionWhereInput!]
  orderingAgent: UserWhereInput
  orders_every: OrderWhereInput
  orders_none: OrderWhereInput
  orders_some: OrderWhereInput
  org: OrganizationWhereInput
  requisitionItems_every: RequisitionItemWhereInput
  requisitionItems_none: RequisitionItemWhereInput
  requisitionItems_some: RequisitionItemWhereInput
  sentAt: DateTime
  sentAt_gt: DateTime
  sentAt_gte: DateTime
  sentAt_in: [DateTime!]
  sentAt_lt: DateTime
  sentAt_lte: DateTime
  sentAt_not: DateTime
  sentAt_not_in: [DateTime!]
  state: RequisitionState
  state_in: [RequisitionState!]
  state_not: RequisitionState
  state_not_in: [RequisitionState!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  updatedBy: UserWhereInput
}

enum Role {
  Demo
  Distributor
  Field
  Procurement
  Unassigned
}

type Sage100ContractorJobMapping {
  job: Job!
  sageId: UUID!
}

input Sage100ContractorJobMappingWhereInput {
  AND: [Sage100ContractorJobMappingWhereInput!]
  job: JobWhereInput
  NOT: [Sage100ContractorJobMappingWhereInput!]
  OR: [Sage100ContractorJobMappingWhereInput!]
  sageId: UUID
  sageId_contains: UUID
  sageId_ends_with: UUID
  sageId_gt: UUID
  sageId_gte: UUID
  sageId_in: [UUID!]
  sageId_lt: UUID
  sageId_lte: UUID
  sageId_not: UUID
  sageId_not_contains: UUID
  sageId_not_ends_with: UUID
  sageId_not_in: [UUID!]
  sageId_not_starts_with: UUID
  sageId_starts_with: UUID
}

type Sage100ContractorPhaseCodeMapping {
  phaseCode: PhaseCode!
  sageId: UUID!
}

input Sage100ContractorPhaseCodeMappingWhereInput {
  AND: [Sage100ContractorPhaseCodeMappingWhereInput!]
  NOT: [Sage100ContractorPhaseCodeMappingWhereInput!]
  OR: [Sage100ContractorPhaseCodeMappingWhereInput!]
  phaseCode: PhaseCodeWhereInput
  sageId: UUID
  sageId_contains: UUID
  sageId_ends_with: UUID
  sageId_gt: UUID
  sageId_gte: UUID
  sageId_in: [UUID!]
  sageId_lt: UUID
  sageId_lte: UUID
  sageId_not: UUID
  sageId_not_contains: UUID
  sageId_not_ends_with: UUID
  sageId_not_in: [UUID!]
  sageId_not_starts_with: UUID
  sageId_starts_with: UUID
}

type Sage300CREJobMapping {
  job: Job!
  sageId: UUID!
}

input Sage300CREJobMappingWhereInput {
  AND: [Sage300CREJobMappingWhereInput!]
  job: JobWhereInput
  NOT: [Sage300CREJobMappingWhereInput!]
  OR: [Sage300CREJobMappingWhereInput!]
  sageId: UUID
  sageId_contains: UUID
  sageId_ends_with: UUID
  sageId_gt: UUID
  sageId_gte: UUID
  sageId_in: [UUID!]
  sageId_lt: UUID
  sageId_lte: UUID
  sageId_not: UUID
  sageId_not_contains: UUID
  sageId_not_ends_with: UUID
  sageId_not_in: [UUID!]
  sageId_not_starts_with: UUID
  sageId_starts_with: UUID
}

type Sage300CREPhaseCodeMapping {
  phaseCode: PhaseCode!
  sageId: UUID!
}

input Sage300CREPhaseCodeMappingWhereInput {
  AND: [Sage300CREPhaseCodeMappingWhereInput!]
  NOT: [Sage300CREPhaseCodeMappingWhereInput!]
  OR: [Sage300CREPhaseCodeMappingWhereInput!]
  phaseCode: PhaseCodeWhereInput
  sageId: UUID
  sageId_contains: UUID
  sageId_ends_with: UUID
  sageId_gt: UUID
  sageId_gte: UUID
  sageId_in: [UUID!]
  sageId_lt: UUID
  sageId_lte: UUID
  sageId_not: UUID
  sageId_not_contains: UUID
  sageId_not_ends_with: UUID
  sageId_not_in: [UUID!]
  sageId_not_starts_with: UUID
  sageId_starts_with: UUID
}

enum TableEnterDirection {
  DOWN
  RIGHT
}

type TaxCode {
  code: String!
  createdAt: DateTime!
  description: String!
  id: ID!
  integrationData: Json
  org: Organization!
  quickbooksOnlineTaxCodeMapping: quickbooksOnlineTaxCodeMapping
  taxPercent: Float!
  taxType: TaxType!
  updatedAt: DateTime!
}

input TaxCodeInput {
  code: String
  description: String
  taxPercent: Float
  taxType: String
}

input TaxCodeWhereInput {
  AND: [TaxCodeWhereInput!]
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [TaxCodeWhereInput!]
  OR: [TaxCodeWhereInput!]
  org: OrganizationWhereInput
  quickbooksOnlineTaxCodeMapping: quickbooksOnlineTaxCodeMappingWhereInput
  taxPercent: Float
  taxPercent_gt: Float
  taxPercent_gte: Float
  taxPercent_in: [Float!]
  taxPercent_lt: Float
  taxPercent_lte: Float
  taxPercent_not: Float
  taxPercent_not_in: [Float!]
  taxType: TaxType
  taxType_in: [TaxType!]
  taxType_not: TaxType
  taxType_not_in: [TaxType!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum TaxType {
  SALES
  USE
}

input UpdateDeliveryReceiptInput {
  deliveryLocationId: ID
  issues: [DeliveryIssue!]
  notes: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  activated: Boolean!
  admin: Boolean!
  avatarUrl: String
  createdAt: DateTime!
  defaultTimezone: String
  displayName: String
  email: String!
  emailNotificationsEnabled: Boolean!
  expoPushTokens(after: String, before: String, first: Int, last: Int, orderBy: ExpoPushTokenOrderByInput, skip: Int, where: ExpoPushTokenWhereInput): [ExpoPushToken!]
  firstName: String
  id: ID!
  integrationData: Json
  itemsTableColumnOrder: [String!]!

  """Jobs on to which the user has self-selected."""
  jobs: [Job!]!
  lastName: String
  name: String!
  org: Organization
  phone: String
  role: String
  tableEnterDirection: TableEnterDirection!
  updatedAt: DateTime!
}

input UserInput {
  admin: Boolean!
  displayName: String!
  email: String!
  phone: String!
  role: String!
}

enum UserOrderByInput {
  activated_ASC
  activated_DESC
  admin_ASC
  admin_DESC
  avatarUrl_ASC
  avatarUrl_DESC
  createdAt_ASC
  createdAt_DESC
  defaultTimezone_ASC
  defaultTimezone_DESC
  displayName_ASC
  displayName_DESC
  email_ASC
  email_DESC
  emailNotificationsEnabled_ASC
  emailNotificationsEnabled_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  integrationData_ASC
  integrationData_DESC
  lastName_ASC
  lastName_DESC
  password_ASC
  password_DESC
  phone_ASC
  phone_DESC
  role_ASC
  role_DESC
  tableEnterDirection_ASC
  tableEnterDirection_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserSettingsInput {
  admin: Boolean
  role: Role
  userId: ID
}

input UserUpdateInput {
  admin: Boolean
  displayName: String
  email: String
  emailNotificationsEnabled: Boolean
  itemsTableColumnOrder: [String!]
  phone: String
  role: String
  tableEnterDirection: TableEnterDirection
}

input UserWhereInput {
  activated: Boolean
  activated_not: Boolean
  admin: Boolean
  admin_not: Boolean
  AND: [UserWhereInput!]
  avatarUrl: String
  avatarUrl_contains: String
  avatarUrl_ends_with: String
  avatarUrl_gt: String
  avatarUrl_gte: String
  avatarUrl_in: [String!]
  avatarUrl_lt: String
  avatarUrl_lte: String
  avatarUrl_not: String
  avatarUrl_not_contains: String
  avatarUrl_not_ends_with: String
  avatarUrl_not_in: [String!]
  avatarUrl_not_starts_with: String
  avatarUrl_starts_with: String
  contacts_every: ContactWhereInput
  contacts_none: ContactWhereInput
  contacts_some: ContactWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  defaultTimezone: String
  defaultTimezone_contains: String
  defaultTimezone_ends_with: String
  defaultTimezone_gt: String
  defaultTimezone_gte: String
  defaultTimezone_in: [String!]
  defaultTimezone_lt: String
  defaultTimezone_lte: String
  defaultTimezone_not: String
  defaultTimezone_not_contains: String
  defaultTimezone_not_ends_with: String
  defaultTimezone_not_in: [String!]
  defaultTimezone_not_starts_with: String
  defaultTimezone_starts_with: String
  displayName: String
  displayName_contains: String
  displayName_ends_with: String
  displayName_gt: String
  displayName_gte: String
  displayName_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_not: String
  displayName_not_contains: String
  displayName_not_ends_with: String
  displayName_not_in: [String!]
  displayName_not_starts_with: String
  displayName_starts_with: String
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  emailNotificationsEnabled: Boolean
  emailNotificationsEnabled_not: Boolean
  expoPushTokens_every: ExpoPushTokenWhereInput
  expoPushTokens_none: ExpoPushTokenWhereInput
  expoPushTokens_some: ExpoPushTokenWhereInput
  firstName: String
  firstName_contains: String
  firstName_ends_with: String
  firstName_gt: String
  firstName_gte: String
  firstName_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_not: String
  firstName_not_contains: String
  firstName_not_ends_with: String
  firstName_not_in: [String!]
  firstName_not_starts_with: String
  firstName_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  jobs_every: JobWhereInput
  jobs_none: JobWhereInput
  jobs_some: JobWhereInput
  jobsWhereDefaultUser_every: JobWhereInput
  jobsWhereDefaultUser_none: JobWhereInput
  jobsWhereDefaultUser_some: JobWhereInput
  lastName: String
  lastName_contains: String
  lastName_ends_with: String
  lastName_gt: String
  lastName_gte: String
  lastName_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_not: String
  lastName_not_contains: String
  lastName_not_ends_with: String
  lastName_not_in: [String!]
  lastName_not_starts_with: String
  lastName_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  org: OrganizationWhereInput
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  phone: String
  phone_contains: String
  phone_ends_with: String
  phone_gt: String
  phone_gte: String
  phone_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_not: String
  phone_not_contains: String
  phone_not_ends_with: String
  phone_not_in: [String!]
  phone_not_starts_with: String
  phone_starts_with: String
  role: String
  role_contains: String
  role_ends_with: String
  role_gt: String
  role_gte: String
  role_in: [String!]
  role_lt: String
  role_lte: String
  role_not: String
  role_not_contains: String
  role_not_ends_with: String
  role_not_in: [String!]
  role_not_starts_with: String
  role_starts_with: String
  tableEnterDirection: TableEnterDirection
  tableEnterDirection_in: [TableEnterDirection!]
  tableEnterDirection_not: TableEnterDirection
  tableEnterDirection_not_in: [TableEnterDirection!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

scalar UUID

type Vendor {
  code: String!
  contacts(after: String, before: String, first: Int, last: Int, orderBy: ContactOrderByInput, skip: Int, where: ContactWhereInput): [Contact!]
  createdAt: DateTime!
  id: ID!
  location: Location
  metadata: Json
  name: String!
  orders(after: String, before: String, first: Int, last: Int, orderBy: OrderOrderByInput, skip: Int, where: OrderWhereInput): [Order!]
  org: Organization!
  updatedAt: DateTime!
}

input VendorInput {
  code: String
  name: String
}

enum VendorOrderByInput {
  code_ASC
  code_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  metadata_ASC
  metadata_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type VendorPrice {
  description: String!
  id: ID!
  organization: Organization!
  pricingFile: File!
  pricingFileUrl: String!
  unitPrice: Float!
  uom: String!
  upc: String!
  updatedAt: DateTime!
  vendor: Vendor!
  vendorPriceKey: String!
}

type VendorSearchResult {
  count: Int!
  vendors: [Vendor!]!
}

type VendorUploadReturn {
  error: String
  numberFailed: Int!
  numberSucceeded: Int!
}

input VendorWhereInput {
  AND: [VendorWhereInput!]
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  contacts_every: ContactWhereInput
  contacts_none: ContactWhereInput
  contacts_some: ContactWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  location: LocationWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [VendorWhereInput!]
  OR: [VendorWhereInput!]
  orders_every: OrderWhereInput
  orders_none: OrderWhereInput
  orders_some: OrderWhereInput
  org: OrganizationWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input WarehouseWhereInput {
  AND: [WarehouseWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  location: LocationWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [WarehouseWhereInput!]
  OR: [WarehouseWhereInput!]
  org: OrganizationWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}
